
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser"

export type * from '../models.ts'
export type * from './prismaNamespace.ts'

export const Decimal = runtime.Decimal


export const NullTypes = {
  DbNull: runtime.objectEnumValues.classes.DbNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.DbNull),
  JsonNull: runtime.objectEnumValues.classes.JsonNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.JsonNull),
  AnyNull: runtime.objectEnumValues.classes.AnyNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.AnyNull),
}
/**
 * Helper for filtering JSON entries that have `null` on the database (empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const DbNull = runtime.objectEnumValues.instances.DbNull
/**
 * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const JsonNull = runtime.objectEnumValues.instances.JsonNull
/**
 * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const AnyNull = runtime.objectEnumValues.instances.AnyNull


export const ModelName = {
  Account: 'Account',
  ActivityLog: 'ActivityLog',
  Deposit: 'Deposit',
  KYC: 'KYC',
  MT5Account: 'MT5Account',
  MT5Transaction: 'MT5Transaction',
  PaymentMethod: 'PaymentMethod',
  Role: 'Role',
  SystemSetting: 'SystemSetting',
  Transaction: 'Transaction',
  User: 'User',
  UserRole: 'UserRole',
  Withdrawal: 'Withdrawal',
  chat_conversations: 'chat_conversations',
  chat_messages: 'chat_messages',
  chat_participants: 'chat_participants',
  group_commission_structures: 'group_commission_structures',
  ib_admin: 'ib_admin',
  ib_requests: 'ib_requests',
  mt5_groups: 'mt5_groups',
  symbols: 'symbols'
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/*
 * Enums
 */

export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
} as const)

export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


export const AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  accountType: 'accountType',
  balance: 'balance',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type AccountScalarFieldEnum = (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum]


export const ActivityLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  adminId: 'adminId',
  action: 'action',
  entity: 'entity',
  entityId: 'entityId',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  oldValues: 'oldValues',
  newValues: 'newValues',
  createdAt: 'createdAt'
} as const

export type ActivityLogScalarFieldEnum = (typeof ActivityLogScalarFieldEnum)[keyof typeof ActivityLogScalarFieldEnum]


export const DepositScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  mt5AccountId: 'mt5AccountId',
  amount: 'amount',
  currency: 'currency',
  method: 'method',
  paymentMethod: 'paymentMethod',
  transactionHash: 'transactionHash',
  proofFileUrl: 'proofFileUrl',
  bankDetails: 'bankDetails',
  cryptoAddress: 'cryptoAddress',
  depositAddress: 'depositAddress',
  externalTransactionId: 'externalTransactionId',
  status: 'status',
  rejectionReason: 'rejectionReason',
  approvedBy: 'approvedBy',
  approvedAt: 'approvedAt',
  rejectedAt: 'rejectedAt',
  processedAt: 'processedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type DepositScalarFieldEnum = (typeof DepositScalarFieldEnum)[keyof typeof DepositScalarFieldEnum]


export const KYCScalarFieldEnum = {
  id: 'id',
  isDocumentVerified: 'isDocumentVerified',
  isAddressVerified: 'isAddressVerified',
  verificationStatus: 'verificationStatus',
  documentReference: 'documentReference',
  addressReference: 'addressReference',
  amlReference: 'amlReference',
  documentSubmittedAt: 'documentSubmittedAt',
  addressSubmittedAt: 'addressSubmittedAt',
  rejectionReason: 'rejectionReason',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId'
} as const

export type KYCScalarFieldEnum = (typeof KYCScalarFieldEnum)[keyof typeof KYCScalarFieldEnum]


export const MT5AccountScalarFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type MT5AccountScalarFieldEnum = (typeof MT5AccountScalarFieldEnum)[keyof typeof MT5AccountScalarFieldEnum]


export const MT5TransactionScalarFieldEnum = {
  id: 'id',
  type: 'type',
  amount: 'amount',
  status: 'status',
  paymentMethod: 'paymentMethod',
  transactionId: 'transactionId',
  comment: 'comment',
  mt5AccountId: 'mt5AccountId',
  createdAt: 'createdAt',
  currency: 'currency',
  depositId: 'depositId',
  withdrawalId: 'withdrawalId',
  userId: 'userId',
  processedBy: 'processedBy',
  processedAt: 'processedAt',
  updatedAt: 'updatedAt'
} as const

export type MT5TransactionScalarFieldEnum = (typeof MT5TransactionScalarFieldEnum)[keyof typeof MT5TransactionScalarFieldEnum]


export const PaymentMethodScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  address: 'address',
  currency: 'currency',
  network: 'network',
  status: 'status',
  submittedAt: 'submittedAt',
  approvedAt: 'approvedAt',
  approvedBy: 'approvedBy',
  rejectionReason: 'rejectionReason',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type PaymentMethodScalarFieldEnum = (typeof PaymentMethodScalarFieldEnum)[keyof typeof PaymentMethodScalarFieldEnum]


export const RoleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  permissions: 'permissions',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type RoleScalarFieldEnum = (typeof RoleScalarFieldEnum)[keyof typeof RoleScalarFieldEnum]


export const SystemSettingScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value',
  category: 'category',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type SystemSettingScalarFieldEnum = (typeof SystemSettingScalarFieldEnum)[keyof typeof SystemSettingScalarFieldEnum]


export const TransactionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  amount: 'amount',
  status: 'status',
  currency: 'currency',
  paymentMethod: 'paymentMethod',
  transactionId: 'transactionId',
  description: 'description',
  metadata: 'metadata',
  depositId: 'depositId',
  withdrawalId: 'withdrawalId',
  updatedAt: 'updatedAt',
  createdAt: 'createdAt'
} as const

export type TransactionScalarFieldEnum = (typeof TransactionScalarFieldEnum)[keyof typeof TransactionScalarFieldEnum]


export const UserScalarFieldEnum = {
  id: 'id',
  clientId: 'clientId',
  email: 'email',
  password: 'password',
  name: 'name',
  phone: 'phone',
  country: 'country',
  createdAt: 'createdAt',
  emailVerified: 'emailVerified',
  lastLoginAt: 'lastLoginAt',
  role: 'role',
  status: 'status'
} as const

export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


export const UserRoleScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  roleId: 'roleId',
  assignedAt: 'assignedAt',
  assignedBy: 'assignedBy'
} as const

export type UserRoleScalarFieldEnum = (typeof UserRoleScalarFieldEnum)[keyof typeof UserRoleScalarFieldEnum]


export const WithdrawalScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  mt5AccountId: 'mt5AccountId',
  amount: 'amount',
  method: 'method',
  bankDetails: 'bankDetails',
  cryptoAddress: 'cryptoAddress',
  status: 'status',
  rejectionReason: 'rejectionReason',
  approvedBy: 'approvedBy',
  approvedAt: 'approvedAt',
  rejectedAt: 'rejectedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  currency: 'currency',
  externalTransactionId: 'externalTransactionId',
  paymentMethod: 'paymentMethod',
  processedAt: 'processedAt',
  walletAddress: 'walletAddress'
} as const

export type WithdrawalScalarFieldEnum = (typeof WithdrawalScalarFieldEnum)[keyof typeof WithdrawalScalarFieldEnum]


export const Chat_conversationsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  user_name: 'user_name',
  user_email: 'user_email',
  admin_id: 'admin_id',
  status: 'status',
  priority: 'priority',
  subject: 'subject',
  last_message_at: 'last_message_at',
  created_at: 'created_at',
  updated_at: 'updated_at',
  closed_at: 'closed_at',
  closed_by: 'closed_by',
  tags: 'tags',
  unread_count_admin: 'unread_count_admin',
  unread_count_user: 'unread_count_user'
} as const

export type Chat_conversationsScalarFieldEnum = (typeof Chat_conversationsScalarFieldEnum)[keyof typeof Chat_conversationsScalarFieldEnum]


export const Chat_messagesScalarFieldEnum = {
  id: 'id',
  conversation_id: 'conversation_id',
  sender_id: 'sender_id',
  sender_name: 'sender_name',
  sender_type: 'sender_type',
  message_type: 'message_type',
  content: 'content',
  metadata: 'metadata',
  is_read: 'is_read',
  read_at: 'read_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
} as const

export type Chat_messagesScalarFieldEnum = (typeof Chat_messagesScalarFieldEnum)[keyof typeof Chat_messagesScalarFieldEnum]


export const Chat_participantsScalarFieldEnum = {
  id: 'id',
  conversation_id: 'conversation_id',
  user_id: 'user_id',
  user_name: 'user_name',
  user_type: 'user_type',
  role: 'role',
  joined_at: 'joined_at',
  left_at: 'left_at',
  is_active: 'is_active'
} as const

export type Chat_participantsScalarFieldEnum = (typeof Chat_participantsScalarFieldEnum)[keyof typeof Chat_participantsScalarFieldEnum]


export const Group_commission_structuresScalarFieldEnum = {
  id: 'id',
  group_id: 'group_id',
  structure_name: 'structure_name',
  usd_per_lot: 'usd_per_lot',
  spread_share_percentage: 'spread_share_percentage',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
} as const

export type Group_commission_structuresScalarFieldEnum = (typeof Group_commission_structuresScalarFieldEnum)[keyof typeof Group_commission_structuresScalarFieldEnum]


export const Ib_adminScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password_hash: 'password_hash',
  role: 'role',
  is_active: 'is_active',
  last_login: 'last_login',
  login_attempts: 'login_attempts',
  locked_until: 'locked_until',
  created_at: 'created_at',
  updated_at: 'updated_at'
} as const

export type Ib_adminScalarFieldEnum = (typeof Ib_adminScalarFieldEnum)[keyof typeof Ib_adminScalarFieldEnum]


export const Ib_requestsScalarFieldEnum = {
  id: 'id',
  full_name: 'full_name',
  email: 'email',
  password_hash: 'password_hash',
  status: 'status',
  ib_type: 'ib_type',
  submitted_at: 'submitted_at',
  approved_at: 'approved_at',
  usd_per_lot: 'usd_per_lot',
  spread_percentage_per_lot: 'spread_percentage_per_lot',
  admin_comments: 'admin_comments',
  group_id: 'group_id',
  structure_id: 'structure_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
} as const

export type Ib_requestsScalarFieldEnum = (typeof Ib_requestsScalarFieldEnum)[keyof typeof Ib_requestsScalarFieldEnum]


export const Mt5_groupsScalarFieldEnum = {
  id: 'id',
  group_id: 'group_id',
  name: 'name',
  description: 'description',
  synced_at: 'synced_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
} as const

export type Mt5_groupsScalarFieldEnum = (typeof Mt5_groupsScalarFieldEnum)[keyof typeof Mt5_groupsScalarFieldEnum]


export const SymbolsScalarFieldEnum = {
  id: 'id',
  symbol_name: 'symbol_name',
  description: 'description',
  symbol_type: 'symbol_type',
  group_name: 'group_name',
  digits: 'digits',
  spread: 'spread',
  contract_size: 'contract_size',
  profit_mode: 'profit_mode',
  enable: 'enable',
  swap_mode: 'swap_mode',
  swap_long: 'swap_long',
  swap_short: 'swap_short',
  swap3_day: 'swap3_day',
  created_at: 'created_at',
  updated_at: 'updated_at'
} as const

export type SymbolsScalarFieldEnum = (typeof SymbolsScalarFieldEnum)[keyof typeof SymbolsScalarFieldEnum]


export const SortOrder = {
  asc: 'asc',
  desc: 'desc'
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


export const NullableJsonNullValueInput = {
  DbNull: DbNull,
  JsonNull: JsonNull
} as const

export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


export const QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
} as const

export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


export const NullsOrder = {
  first: 'first',
  last: 'last'
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


export const JsonNullValueFilter = {
  DbNull: DbNull,
  JsonNull: JsonNull,
  AnyNull: AnyNull
} as const

export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]

