
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `chat_conversations` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model chat_conversations
 * 
 */
export type chat_conversationsModel = runtime.Types.Result.DefaultSelection<Prisma.$chat_conversationsPayload>

export type AggregateChat_conversations = {
  _count: Chat_conversationsCountAggregateOutputType | null
  _avg: Chat_conversationsAvgAggregateOutputType | null
  _sum: Chat_conversationsSumAggregateOutputType | null
  _min: Chat_conversationsMinAggregateOutputType | null
  _max: Chat_conversationsMaxAggregateOutputType | null
}

export type Chat_conversationsAvgAggregateOutputType = {
  id: number | null
  unread_count_admin: number | null
  unread_count_user: number | null
}

export type Chat_conversationsSumAggregateOutputType = {
  id: number | null
  unread_count_admin: number | null
  unread_count_user: number | null
}

export type Chat_conversationsMinAggregateOutputType = {
  id: number | null
  user_id: string | null
  user_name: string | null
  user_email: string | null
  admin_id: string | null
  status: string | null
  priority: string | null
  subject: string | null
  last_message_at: Date | null
  created_at: Date | null
  updated_at: Date | null
  closed_at: Date | null
  closed_by: string | null
  unread_count_admin: number | null
  unread_count_user: number | null
}

export type Chat_conversationsMaxAggregateOutputType = {
  id: number | null
  user_id: string | null
  user_name: string | null
  user_email: string | null
  admin_id: string | null
  status: string | null
  priority: string | null
  subject: string | null
  last_message_at: Date | null
  created_at: Date | null
  updated_at: Date | null
  closed_at: Date | null
  closed_by: string | null
  unread_count_admin: number | null
  unread_count_user: number | null
}

export type Chat_conversationsCountAggregateOutputType = {
  id: number
  user_id: number
  user_name: number
  user_email: number
  admin_id: number
  status: number
  priority: number
  subject: number
  last_message_at: number
  created_at: number
  updated_at: number
  closed_at: number
  closed_by: number
  tags: number
  unread_count_admin: number
  unread_count_user: number
  _all: number
}


export type Chat_conversationsAvgAggregateInputType = {
  id?: true
  unread_count_admin?: true
  unread_count_user?: true
}

export type Chat_conversationsSumAggregateInputType = {
  id?: true
  unread_count_admin?: true
  unread_count_user?: true
}

export type Chat_conversationsMinAggregateInputType = {
  id?: true
  user_id?: true
  user_name?: true
  user_email?: true
  admin_id?: true
  status?: true
  priority?: true
  subject?: true
  last_message_at?: true
  created_at?: true
  updated_at?: true
  closed_at?: true
  closed_by?: true
  unread_count_admin?: true
  unread_count_user?: true
}

export type Chat_conversationsMaxAggregateInputType = {
  id?: true
  user_id?: true
  user_name?: true
  user_email?: true
  admin_id?: true
  status?: true
  priority?: true
  subject?: true
  last_message_at?: true
  created_at?: true
  updated_at?: true
  closed_at?: true
  closed_by?: true
  unread_count_admin?: true
  unread_count_user?: true
}

export type Chat_conversationsCountAggregateInputType = {
  id?: true
  user_id?: true
  user_name?: true
  user_email?: true
  admin_id?: true
  status?: true
  priority?: true
  subject?: true
  last_message_at?: true
  created_at?: true
  updated_at?: true
  closed_at?: true
  closed_by?: true
  tags?: true
  unread_count_admin?: true
  unread_count_user?: true
  _all?: true
}

export type Chat_conversationsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which chat_conversations to aggregate.
   */
  where?: Prisma.chat_conversationsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of chat_conversations to fetch.
   */
  orderBy?: Prisma.chat_conversationsOrderByWithRelationInput | Prisma.chat_conversationsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.chat_conversationsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` chat_conversations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` chat_conversations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned chat_conversations
  **/
  _count?: true | Chat_conversationsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Chat_conversationsAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Chat_conversationsSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Chat_conversationsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Chat_conversationsMaxAggregateInputType
}

export type GetChat_conversationsAggregateType<T extends Chat_conversationsAggregateArgs> = {
      [P in keyof T & keyof AggregateChat_conversations]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateChat_conversations[P]>
    : Prisma.GetScalarType<T[P], AggregateChat_conversations[P]>
}




export type chat_conversationsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.chat_conversationsWhereInput
  orderBy?: Prisma.chat_conversationsOrderByWithAggregationInput | Prisma.chat_conversationsOrderByWithAggregationInput[]
  by: Prisma.Chat_conversationsScalarFieldEnum[] | Prisma.Chat_conversationsScalarFieldEnum
  having?: Prisma.chat_conversationsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Chat_conversationsCountAggregateInputType | true
  _avg?: Chat_conversationsAvgAggregateInputType
  _sum?: Chat_conversationsSumAggregateInputType
  _min?: Chat_conversationsMinAggregateInputType
  _max?: Chat_conversationsMaxAggregateInputType
}

export type Chat_conversationsGroupByOutputType = {
  id: number
  user_id: string
  user_name: string
  user_email: string
  admin_id: string | null
  status: string | null
  priority: string | null
  subject: string | null
  last_message_at: Date | null
  created_at: Date | null
  updated_at: Date | null
  closed_at: Date | null
  closed_by: string | null
  tags: string[]
  unread_count_admin: number | null
  unread_count_user: number | null
  _count: Chat_conversationsCountAggregateOutputType | null
  _avg: Chat_conversationsAvgAggregateOutputType | null
  _sum: Chat_conversationsSumAggregateOutputType | null
  _min: Chat_conversationsMinAggregateOutputType | null
  _max: Chat_conversationsMaxAggregateOutputType | null
}

type GetChat_conversationsGroupByPayload<T extends chat_conversationsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Chat_conversationsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Chat_conversationsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Chat_conversationsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Chat_conversationsGroupByOutputType[P]>
      }
    >
  >



export type chat_conversationsWhereInput = {
  AND?: Prisma.chat_conversationsWhereInput | Prisma.chat_conversationsWhereInput[]
  OR?: Prisma.chat_conversationsWhereInput[]
  NOT?: Prisma.chat_conversationsWhereInput | Prisma.chat_conversationsWhereInput[]
  id?: Prisma.IntFilter<"chat_conversations"> | number
  user_id?: Prisma.StringFilter<"chat_conversations"> | string
  user_name?: Prisma.StringFilter<"chat_conversations"> | string
  user_email?: Prisma.StringFilter<"chat_conversations"> | string
  admin_id?: Prisma.StringNullableFilter<"chat_conversations"> | string | null
  status?: Prisma.StringNullableFilter<"chat_conversations"> | string | null
  priority?: Prisma.StringNullableFilter<"chat_conversations"> | string | null
  subject?: Prisma.StringNullableFilter<"chat_conversations"> | string | null
  last_message_at?: Prisma.DateTimeNullableFilter<"chat_conversations"> | Date | string | null
  created_at?: Prisma.DateTimeNullableFilter<"chat_conversations"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"chat_conversations"> | Date | string | null
  closed_at?: Prisma.DateTimeNullableFilter<"chat_conversations"> | Date | string | null
  closed_by?: Prisma.StringNullableFilter<"chat_conversations"> | string | null
  tags?: Prisma.StringNullableListFilter<"chat_conversations">
  unread_count_admin?: Prisma.IntNullableFilter<"chat_conversations"> | number | null
  unread_count_user?: Prisma.IntNullableFilter<"chat_conversations"> | number | null
  chat_messages?: Prisma.Chat_messagesListRelationFilter
  chat_participants?: Prisma.Chat_participantsListRelationFilter
}

export type chat_conversationsOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  user_name?: Prisma.SortOrder
  user_email?: Prisma.SortOrder
  admin_id?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrderInput | Prisma.SortOrder
  priority?: Prisma.SortOrderInput | Prisma.SortOrder
  subject?: Prisma.SortOrderInput | Prisma.SortOrder
  last_message_at?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  closed_at?: Prisma.SortOrderInput | Prisma.SortOrder
  closed_by?: Prisma.SortOrderInput | Prisma.SortOrder
  tags?: Prisma.SortOrder
  unread_count_admin?: Prisma.SortOrderInput | Prisma.SortOrder
  unread_count_user?: Prisma.SortOrderInput | Prisma.SortOrder
  chat_messages?: Prisma.chat_messagesOrderByRelationAggregateInput
  chat_participants?: Prisma.chat_participantsOrderByRelationAggregateInput
}

export type chat_conversationsWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.chat_conversationsWhereInput | Prisma.chat_conversationsWhereInput[]
  OR?: Prisma.chat_conversationsWhereInput[]
  NOT?: Prisma.chat_conversationsWhereInput | Prisma.chat_conversationsWhereInput[]
  user_id?: Prisma.StringFilter<"chat_conversations"> | string
  user_name?: Prisma.StringFilter<"chat_conversations"> | string
  user_email?: Prisma.StringFilter<"chat_conversations"> | string
  admin_id?: Prisma.StringNullableFilter<"chat_conversations"> | string | null
  status?: Prisma.StringNullableFilter<"chat_conversations"> | string | null
  priority?: Prisma.StringNullableFilter<"chat_conversations"> | string | null
  subject?: Prisma.StringNullableFilter<"chat_conversations"> | string | null
  last_message_at?: Prisma.DateTimeNullableFilter<"chat_conversations"> | Date | string | null
  created_at?: Prisma.DateTimeNullableFilter<"chat_conversations"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"chat_conversations"> | Date | string | null
  closed_at?: Prisma.DateTimeNullableFilter<"chat_conversations"> | Date | string | null
  closed_by?: Prisma.StringNullableFilter<"chat_conversations"> | string | null
  tags?: Prisma.StringNullableListFilter<"chat_conversations">
  unread_count_admin?: Prisma.IntNullableFilter<"chat_conversations"> | number | null
  unread_count_user?: Prisma.IntNullableFilter<"chat_conversations"> | number | null
  chat_messages?: Prisma.Chat_messagesListRelationFilter
  chat_participants?: Prisma.Chat_participantsListRelationFilter
}, "id">

export type chat_conversationsOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  user_name?: Prisma.SortOrder
  user_email?: Prisma.SortOrder
  admin_id?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrderInput | Prisma.SortOrder
  priority?: Prisma.SortOrderInput | Prisma.SortOrder
  subject?: Prisma.SortOrderInput | Prisma.SortOrder
  last_message_at?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  closed_at?: Prisma.SortOrderInput | Prisma.SortOrder
  closed_by?: Prisma.SortOrderInput | Prisma.SortOrder
  tags?: Prisma.SortOrder
  unread_count_admin?: Prisma.SortOrderInput | Prisma.SortOrder
  unread_count_user?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.chat_conversationsCountOrderByAggregateInput
  _avg?: Prisma.chat_conversationsAvgOrderByAggregateInput
  _max?: Prisma.chat_conversationsMaxOrderByAggregateInput
  _min?: Prisma.chat_conversationsMinOrderByAggregateInput
  _sum?: Prisma.chat_conversationsSumOrderByAggregateInput
}

export type chat_conversationsScalarWhereWithAggregatesInput = {
  AND?: Prisma.chat_conversationsScalarWhereWithAggregatesInput | Prisma.chat_conversationsScalarWhereWithAggregatesInput[]
  OR?: Prisma.chat_conversationsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.chat_conversationsScalarWhereWithAggregatesInput | Prisma.chat_conversationsScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"chat_conversations"> | number
  user_id?: Prisma.StringWithAggregatesFilter<"chat_conversations"> | string
  user_name?: Prisma.StringWithAggregatesFilter<"chat_conversations"> | string
  user_email?: Prisma.StringWithAggregatesFilter<"chat_conversations"> | string
  admin_id?: Prisma.StringNullableWithAggregatesFilter<"chat_conversations"> | string | null
  status?: Prisma.StringNullableWithAggregatesFilter<"chat_conversations"> | string | null
  priority?: Prisma.StringNullableWithAggregatesFilter<"chat_conversations"> | string | null
  subject?: Prisma.StringNullableWithAggregatesFilter<"chat_conversations"> | string | null
  last_message_at?: Prisma.DateTimeNullableWithAggregatesFilter<"chat_conversations"> | Date | string | null
  created_at?: Prisma.DateTimeNullableWithAggregatesFilter<"chat_conversations"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableWithAggregatesFilter<"chat_conversations"> | Date | string | null
  closed_at?: Prisma.DateTimeNullableWithAggregatesFilter<"chat_conversations"> | Date | string | null
  closed_by?: Prisma.StringNullableWithAggregatesFilter<"chat_conversations"> | string | null
  tags?: Prisma.StringNullableListFilter<"chat_conversations">
  unread_count_admin?: Prisma.IntNullableWithAggregatesFilter<"chat_conversations"> | number | null
  unread_count_user?: Prisma.IntNullableWithAggregatesFilter<"chat_conversations"> | number | null
}

export type chat_conversationsCreateInput = {
  user_id: string
  user_name: string
  user_email: string
  admin_id?: string | null
  status?: string | null
  priority?: string | null
  subject?: string | null
  last_message_at?: Date | string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  closed_at?: Date | string | null
  closed_by?: string | null
  tags?: Prisma.chat_conversationsCreatetagsInput | string[]
  unread_count_admin?: number | null
  unread_count_user?: number | null
  chat_messages?: Prisma.chat_messagesCreateNestedManyWithoutChat_conversationsInput
  chat_participants?: Prisma.chat_participantsCreateNestedManyWithoutChat_conversationsInput
}

export type chat_conversationsUncheckedCreateInput = {
  id?: number
  user_id: string
  user_name: string
  user_email: string
  admin_id?: string | null
  status?: string | null
  priority?: string | null
  subject?: string | null
  last_message_at?: Date | string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  closed_at?: Date | string | null
  closed_by?: string | null
  tags?: Prisma.chat_conversationsCreatetagsInput | string[]
  unread_count_admin?: number | null
  unread_count_user?: number | null
  chat_messages?: Prisma.chat_messagesUncheckedCreateNestedManyWithoutChat_conversationsInput
  chat_participants?: Prisma.chat_participantsUncheckedCreateNestedManyWithoutChat_conversationsInput
}

export type chat_conversationsUpdateInput = {
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  user_name?: Prisma.StringFieldUpdateOperationsInput | string
  user_email?: Prisma.StringFieldUpdateOperationsInput | string
  admin_id?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priority?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  subject?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  last_message_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  closed_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  closed_by?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tags?: Prisma.chat_conversationsUpdatetagsInput | string[]
  unread_count_admin?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  unread_count_user?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  chat_messages?: Prisma.chat_messagesUpdateManyWithoutChat_conversationsNestedInput
  chat_participants?: Prisma.chat_participantsUpdateManyWithoutChat_conversationsNestedInput
}

export type chat_conversationsUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  user_name?: Prisma.StringFieldUpdateOperationsInput | string
  user_email?: Prisma.StringFieldUpdateOperationsInput | string
  admin_id?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priority?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  subject?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  last_message_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  closed_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  closed_by?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tags?: Prisma.chat_conversationsUpdatetagsInput | string[]
  unread_count_admin?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  unread_count_user?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  chat_messages?: Prisma.chat_messagesUncheckedUpdateManyWithoutChat_conversationsNestedInput
  chat_participants?: Prisma.chat_participantsUncheckedUpdateManyWithoutChat_conversationsNestedInput
}

export type chat_conversationsCreateManyInput = {
  id?: number
  user_id: string
  user_name: string
  user_email: string
  admin_id?: string | null
  status?: string | null
  priority?: string | null
  subject?: string | null
  last_message_at?: Date | string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  closed_at?: Date | string | null
  closed_by?: string | null
  tags?: Prisma.chat_conversationsCreatetagsInput | string[]
  unread_count_admin?: number | null
  unread_count_user?: number | null
}

export type chat_conversationsUpdateManyMutationInput = {
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  user_name?: Prisma.StringFieldUpdateOperationsInput | string
  user_email?: Prisma.StringFieldUpdateOperationsInput | string
  admin_id?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priority?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  subject?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  last_message_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  closed_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  closed_by?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tags?: Prisma.chat_conversationsUpdatetagsInput | string[]
  unread_count_admin?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  unread_count_user?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type chat_conversationsUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  user_name?: Prisma.StringFieldUpdateOperationsInput | string
  user_email?: Prisma.StringFieldUpdateOperationsInput | string
  admin_id?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priority?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  subject?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  last_message_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  closed_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  closed_by?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tags?: Prisma.chat_conversationsUpdatetagsInput | string[]
  unread_count_admin?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  unread_count_user?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type StringNullableListFilter<$PrismaModel = never> = {
  equals?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | null
  has?: string | Prisma.StringFieldRefInput<$PrismaModel> | null
  hasEvery?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel>
  hasSome?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel>
  isEmpty?: boolean
}

export type chat_conversationsCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  user_name?: Prisma.SortOrder
  user_email?: Prisma.SortOrder
  admin_id?: Prisma.SortOrder
  status?: Prisma.SortOrder
  priority?: Prisma.SortOrder
  subject?: Prisma.SortOrder
  last_message_at?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  closed_at?: Prisma.SortOrder
  closed_by?: Prisma.SortOrder
  tags?: Prisma.SortOrder
  unread_count_admin?: Prisma.SortOrder
  unread_count_user?: Prisma.SortOrder
}

export type chat_conversationsAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  unread_count_admin?: Prisma.SortOrder
  unread_count_user?: Prisma.SortOrder
}

export type chat_conversationsMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  user_name?: Prisma.SortOrder
  user_email?: Prisma.SortOrder
  admin_id?: Prisma.SortOrder
  status?: Prisma.SortOrder
  priority?: Prisma.SortOrder
  subject?: Prisma.SortOrder
  last_message_at?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  closed_at?: Prisma.SortOrder
  closed_by?: Prisma.SortOrder
  unread_count_admin?: Prisma.SortOrder
  unread_count_user?: Prisma.SortOrder
}

export type chat_conversationsMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  user_name?: Prisma.SortOrder
  user_email?: Prisma.SortOrder
  admin_id?: Prisma.SortOrder
  status?: Prisma.SortOrder
  priority?: Prisma.SortOrder
  subject?: Prisma.SortOrder
  last_message_at?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  closed_at?: Prisma.SortOrder
  closed_by?: Prisma.SortOrder
  unread_count_admin?: Prisma.SortOrder
  unread_count_user?: Prisma.SortOrder
}

export type chat_conversationsSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  unread_count_admin?: Prisma.SortOrder
  unread_count_user?: Prisma.SortOrder
}

export type Chat_conversationsNullableScalarRelationFilter = {
  is?: Prisma.chat_conversationsWhereInput | null
  isNot?: Prisma.chat_conversationsWhereInput | null
}

export type chat_conversationsCreatetagsInput = {
  set: string[]
}

export type chat_conversationsUpdatetagsInput = {
  set?: string[]
  push?: string | string[]
}

export type NullableIntFieldUpdateOperationsInput = {
  set?: number | null
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type chat_conversationsCreateNestedOneWithoutChat_messagesInput = {
  create?: Prisma.XOR<Prisma.chat_conversationsCreateWithoutChat_messagesInput, Prisma.chat_conversationsUncheckedCreateWithoutChat_messagesInput>
  connectOrCreate?: Prisma.chat_conversationsCreateOrConnectWithoutChat_messagesInput
  connect?: Prisma.chat_conversationsWhereUniqueInput
}

export type chat_conversationsUpdateOneWithoutChat_messagesNestedInput = {
  create?: Prisma.XOR<Prisma.chat_conversationsCreateWithoutChat_messagesInput, Prisma.chat_conversationsUncheckedCreateWithoutChat_messagesInput>
  connectOrCreate?: Prisma.chat_conversationsCreateOrConnectWithoutChat_messagesInput
  upsert?: Prisma.chat_conversationsUpsertWithoutChat_messagesInput
  disconnect?: Prisma.chat_conversationsWhereInput | boolean
  delete?: Prisma.chat_conversationsWhereInput | boolean
  connect?: Prisma.chat_conversationsWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.chat_conversationsUpdateToOneWithWhereWithoutChat_messagesInput, Prisma.chat_conversationsUpdateWithoutChat_messagesInput>, Prisma.chat_conversationsUncheckedUpdateWithoutChat_messagesInput>
}

export type chat_conversationsCreateNestedOneWithoutChat_participantsInput = {
  create?: Prisma.XOR<Prisma.chat_conversationsCreateWithoutChat_participantsInput, Prisma.chat_conversationsUncheckedCreateWithoutChat_participantsInput>
  connectOrCreate?: Prisma.chat_conversationsCreateOrConnectWithoutChat_participantsInput
  connect?: Prisma.chat_conversationsWhereUniqueInput
}

export type chat_conversationsUpdateOneWithoutChat_participantsNestedInput = {
  create?: Prisma.XOR<Prisma.chat_conversationsCreateWithoutChat_participantsInput, Prisma.chat_conversationsUncheckedCreateWithoutChat_participantsInput>
  connectOrCreate?: Prisma.chat_conversationsCreateOrConnectWithoutChat_participantsInput
  upsert?: Prisma.chat_conversationsUpsertWithoutChat_participantsInput
  disconnect?: Prisma.chat_conversationsWhereInput | boolean
  delete?: Prisma.chat_conversationsWhereInput | boolean
  connect?: Prisma.chat_conversationsWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.chat_conversationsUpdateToOneWithWhereWithoutChat_participantsInput, Prisma.chat_conversationsUpdateWithoutChat_participantsInput>, Prisma.chat_conversationsUncheckedUpdateWithoutChat_participantsInput>
}

export type chat_conversationsCreateWithoutChat_messagesInput = {
  user_id: string
  user_name: string
  user_email: string
  admin_id?: string | null
  status?: string | null
  priority?: string | null
  subject?: string | null
  last_message_at?: Date | string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  closed_at?: Date | string | null
  closed_by?: string | null
  tags?: Prisma.chat_conversationsCreatetagsInput | string[]
  unread_count_admin?: number | null
  unread_count_user?: number | null
  chat_participants?: Prisma.chat_participantsCreateNestedManyWithoutChat_conversationsInput
}

export type chat_conversationsUncheckedCreateWithoutChat_messagesInput = {
  id?: number
  user_id: string
  user_name: string
  user_email: string
  admin_id?: string | null
  status?: string | null
  priority?: string | null
  subject?: string | null
  last_message_at?: Date | string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  closed_at?: Date | string | null
  closed_by?: string | null
  tags?: Prisma.chat_conversationsCreatetagsInput | string[]
  unread_count_admin?: number | null
  unread_count_user?: number | null
  chat_participants?: Prisma.chat_participantsUncheckedCreateNestedManyWithoutChat_conversationsInput
}

export type chat_conversationsCreateOrConnectWithoutChat_messagesInput = {
  where: Prisma.chat_conversationsWhereUniqueInput
  create: Prisma.XOR<Prisma.chat_conversationsCreateWithoutChat_messagesInput, Prisma.chat_conversationsUncheckedCreateWithoutChat_messagesInput>
}

export type chat_conversationsUpsertWithoutChat_messagesInput = {
  update: Prisma.XOR<Prisma.chat_conversationsUpdateWithoutChat_messagesInput, Prisma.chat_conversationsUncheckedUpdateWithoutChat_messagesInput>
  create: Prisma.XOR<Prisma.chat_conversationsCreateWithoutChat_messagesInput, Prisma.chat_conversationsUncheckedCreateWithoutChat_messagesInput>
  where?: Prisma.chat_conversationsWhereInput
}

export type chat_conversationsUpdateToOneWithWhereWithoutChat_messagesInput = {
  where?: Prisma.chat_conversationsWhereInput
  data: Prisma.XOR<Prisma.chat_conversationsUpdateWithoutChat_messagesInput, Prisma.chat_conversationsUncheckedUpdateWithoutChat_messagesInput>
}

export type chat_conversationsUpdateWithoutChat_messagesInput = {
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  user_name?: Prisma.StringFieldUpdateOperationsInput | string
  user_email?: Prisma.StringFieldUpdateOperationsInput | string
  admin_id?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priority?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  subject?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  last_message_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  closed_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  closed_by?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tags?: Prisma.chat_conversationsUpdatetagsInput | string[]
  unread_count_admin?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  unread_count_user?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  chat_participants?: Prisma.chat_participantsUpdateManyWithoutChat_conversationsNestedInput
}

export type chat_conversationsUncheckedUpdateWithoutChat_messagesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  user_name?: Prisma.StringFieldUpdateOperationsInput | string
  user_email?: Prisma.StringFieldUpdateOperationsInput | string
  admin_id?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priority?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  subject?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  last_message_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  closed_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  closed_by?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tags?: Prisma.chat_conversationsUpdatetagsInput | string[]
  unread_count_admin?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  unread_count_user?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  chat_participants?: Prisma.chat_participantsUncheckedUpdateManyWithoutChat_conversationsNestedInput
}

export type chat_conversationsCreateWithoutChat_participantsInput = {
  user_id: string
  user_name: string
  user_email: string
  admin_id?: string | null
  status?: string | null
  priority?: string | null
  subject?: string | null
  last_message_at?: Date | string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  closed_at?: Date | string | null
  closed_by?: string | null
  tags?: Prisma.chat_conversationsCreatetagsInput | string[]
  unread_count_admin?: number | null
  unread_count_user?: number | null
  chat_messages?: Prisma.chat_messagesCreateNestedManyWithoutChat_conversationsInput
}

export type chat_conversationsUncheckedCreateWithoutChat_participantsInput = {
  id?: number
  user_id: string
  user_name: string
  user_email: string
  admin_id?: string | null
  status?: string | null
  priority?: string | null
  subject?: string | null
  last_message_at?: Date | string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  closed_at?: Date | string | null
  closed_by?: string | null
  tags?: Prisma.chat_conversationsCreatetagsInput | string[]
  unread_count_admin?: number | null
  unread_count_user?: number | null
  chat_messages?: Prisma.chat_messagesUncheckedCreateNestedManyWithoutChat_conversationsInput
}

export type chat_conversationsCreateOrConnectWithoutChat_participantsInput = {
  where: Prisma.chat_conversationsWhereUniqueInput
  create: Prisma.XOR<Prisma.chat_conversationsCreateWithoutChat_participantsInput, Prisma.chat_conversationsUncheckedCreateWithoutChat_participantsInput>
}

export type chat_conversationsUpsertWithoutChat_participantsInput = {
  update: Prisma.XOR<Prisma.chat_conversationsUpdateWithoutChat_participantsInput, Prisma.chat_conversationsUncheckedUpdateWithoutChat_participantsInput>
  create: Prisma.XOR<Prisma.chat_conversationsCreateWithoutChat_participantsInput, Prisma.chat_conversationsUncheckedCreateWithoutChat_participantsInput>
  where?: Prisma.chat_conversationsWhereInput
}

export type chat_conversationsUpdateToOneWithWhereWithoutChat_participantsInput = {
  where?: Prisma.chat_conversationsWhereInput
  data: Prisma.XOR<Prisma.chat_conversationsUpdateWithoutChat_participantsInput, Prisma.chat_conversationsUncheckedUpdateWithoutChat_participantsInput>
}

export type chat_conversationsUpdateWithoutChat_participantsInput = {
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  user_name?: Prisma.StringFieldUpdateOperationsInput | string
  user_email?: Prisma.StringFieldUpdateOperationsInput | string
  admin_id?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priority?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  subject?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  last_message_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  closed_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  closed_by?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tags?: Prisma.chat_conversationsUpdatetagsInput | string[]
  unread_count_admin?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  unread_count_user?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  chat_messages?: Prisma.chat_messagesUpdateManyWithoutChat_conversationsNestedInput
}

export type chat_conversationsUncheckedUpdateWithoutChat_participantsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  user_name?: Prisma.StringFieldUpdateOperationsInput | string
  user_email?: Prisma.StringFieldUpdateOperationsInput | string
  admin_id?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priority?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  subject?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  last_message_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  closed_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  closed_by?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tags?: Prisma.chat_conversationsUpdatetagsInput | string[]
  unread_count_admin?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  unread_count_user?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  chat_messages?: Prisma.chat_messagesUncheckedUpdateManyWithoutChat_conversationsNestedInput
}


/**
 * Count Type Chat_conversationsCountOutputType
 */

export type Chat_conversationsCountOutputType = {
  chat_messages: number
  chat_participants: number
}

export type Chat_conversationsCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  chat_messages?: boolean | Chat_conversationsCountOutputTypeCountChat_messagesArgs
  chat_participants?: boolean | Chat_conversationsCountOutputTypeCountChat_participantsArgs
}

/**
 * Chat_conversationsCountOutputType without action
 */
export type Chat_conversationsCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Chat_conversationsCountOutputType
   */
  select?: Prisma.Chat_conversationsCountOutputTypeSelect<ExtArgs> | null
}

/**
 * Chat_conversationsCountOutputType without action
 */
export type Chat_conversationsCountOutputTypeCountChat_messagesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.chat_messagesWhereInput
}

/**
 * Chat_conversationsCountOutputType without action
 */
export type Chat_conversationsCountOutputTypeCountChat_participantsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.chat_participantsWhereInput
}


export type chat_conversationsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  user_id?: boolean
  user_name?: boolean
  user_email?: boolean
  admin_id?: boolean
  status?: boolean
  priority?: boolean
  subject?: boolean
  last_message_at?: boolean
  created_at?: boolean
  updated_at?: boolean
  closed_at?: boolean
  closed_by?: boolean
  tags?: boolean
  unread_count_admin?: boolean
  unread_count_user?: boolean
  chat_messages?: boolean | Prisma.chat_conversations$chat_messagesArgs<ExtArgs>
  chat_participants?: boolean | Prisma.chat_conversations$chat_participantsArgs<ExtArgs>
  _count?: boolean | Prisma.Chat_conversationsCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["chat_conversations"]>

export type chat_conversationsSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  user_id?: boolean
  user_name?: boolean
  user_email?: boolean
  admin_id?: boolean
  status?: boolean
  priority?: boolean
  subject?: boolean
  last_message_at?: boolean
  created_at?: boolean
  updated_at?: boolean
  closed_at?: boolean
  closed_by?: boolean
  tags?: boolean
  unread_count_admin?: boolean
  unread_count_user?: boolean
}, ExtArgs["result"]["chat_conversations"]>

export type chat_conversationsSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  user_id?: boolean
  user_name?: boolean
  user_email?: boolean
  admin_id?: boolean
  status?: boolean
  priority?: boolean
  subject?: boolean
  last_message_at?: boolean
  created_at?: boolean
  updated_at?: boolean
  closed_at?: boolean
  closed_by?: boolean
  tags?: boolean
  unread_count_admin?: boolean
  unread_count_user?: boolean
}, ExtArgs["result"]["chat_conversations"]>

export type chat_conversationsSelectScalar = {
  id?: boolean
  user_id?: boolean
  user_name?: boolean
  user_email?: boolean
  admin_id?: boolean
  status?: boolean
  priority?: boolean
  subject?: boolean
  last_message_at?: boolean
  created_at?: boolean
  updated_at?: boolean
  closed_at?: boolean
  closed_by?: boolean
  tags?: boolean
  unread_count_admin?: boolean
  unread_count_user?: boolean
}

export type chat_conversationsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "user_id" | "user_name" | "user_email" | "admin_id" | "status" | "priority" | "subject" | "last_message_at" | "created_at" | "updated_at" | "closed_at" | "closed_by" | "tags" | "unread_count_admin" | "unread_count_user", ExtArgs["result"]["chat_conversations"]>
export type chat_conversationsInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  chat_messages?: boolean | Prisma.chat_conversations$chat_messagesArgs<ExtArgs>
  chat_participants?: boolean | Prisma.chat_conversations$chat_participantsArgs<ExtArgs>
  _count?: boolean | Prisma.Chat_conversationsCountOutputTypeDefaultArgs<ExtArgs>
}
export type chat_conversationsIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type chat_conversationsIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $chat_conversationsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "chat_conversations"
  objects: {
    chat_messages: Prisma.$chat_messagesPayload<ExtArgs>[]
    chat_participants: Prisma.$chat_participantsPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    user_id: string
    user_name: string
    user_email: string
    admin_id: string | null
    status: string | null
    priority: string | null
    subject: string | null
    last_message_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    closed_at: Date | null
    closed_by: string | null
    tags: string[]
    unread_count_admin: number | null
    unread_count_user: number | null
  }, ExtArgs["result"]["chat_conversations"]>
  composites: {}
}

export type chat_conversationsGetPayload<S extends boolean | null | undefined | chat_conversationsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$chat_conversationsPayload, S>

export type chat_conversationsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<chat_conversationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Chat_conversationsCountAggregateInputType | true
  }

export interface chat_conversationsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['chat_conversations'], meta: { name: 'chat_conversations' } }
  /**
   * Find zero or one Chat_conversations that matches the filter.
   * @param {chat_conversationsFindUniqueArgs} args - Arguments to find a Chat_conversations
   * @example
   * // Get one Chat_conversations
   * const chat_conversations = await prisma.chat_conversations.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends chat_conversationsFindUniqueArgs>(args: Prisma.SelectSubset<T, chat_conversationsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__chat_conversationsClient<runtime.Types.Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Chat_conversations that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {chat_conversationsFindUniqueOrThrowArgs} args - Arguments to find a Chat_conversations
   * @example
   * // Get one Chat_conversations
   * const chat_conversations = await prisma.chat_conversations.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends chat_conversationsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, chat_conversationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__chat_conversationsClient<runtime.Types.Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Chat_conversations that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {chat_conversationsFindFirstArgs} args - Arguments to find a Chat_conversations
   * @example
   * // Get one Chat_conversations
   * const chat_conversations = await prisma.chat_conversations.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends chat_conversationsFindFirstArgs>(args?: Prisma.SelectSubset<T, chat_conversationsFindFirstArgs<ExtArgs>>): Prisma.Prisma__chat_conversationsClient<runtime.Types.Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Chat_conversations that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {chat_conversationsFindFirstOrThrowArgs} args - Arguments to find a Chat_conversations
   * @example
   * // Get one Chat_conversations
   * const chat_conversations = await prisma.chat_conversations.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends chat_conversationsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, chat_conversationsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__chat_conversationsClient<runtime.Types.Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Chat_conversations that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {chat_conversationsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Chat_conversations
   * const chat_conversations = await prisma.chat_conversations.findMany()
   * 
   * // Get first 10 Chat_conversations
   * const chat_conversations = await prisma.chat_conversations.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const chat_conversationsWithIdOnly = await prisma.chat_conversations.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends chat_conversationsFindManyArgs>(args?: Prisma.SelectSubset<T, chat_conversationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Chat_conversations.
   * @param {chat_conversationsCreateArgs} args - Arguments to create a Chat_conversations.
   * @example
   * // Create one Chat_conversations
   * const Chat_conversations = await prisma.chat_conversations.create({
   *   data: {
   *     // ... data to create a Chat_conversations
   *   }
   * })
   * 
   */
  create<T extends chat_conversationsCreateArgs>(args: Prisma.SelectSubset<T, chat_conversationsCreateArgs<ExtArgs>>): Prisma.Prisma__chat_conversationsClient<runtime.Types.Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Chat_conversations.
   * @param {chat_conversationsCreateManyArgs} args - Arguments to create many Chat_conversations.
   * @example
   * // Create many Chat_conversations
   * const chat_conversations = await prisma.chat_conversations.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends chat_conversationsCreateManyArgs>(args?: Prisma.SelectSubset<T, chat_conversationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Chat_conversations and returns the data saved in the database.
   * @param {chat_conversationsCreateManyAndReturnArgs} args - Arguments to create many Chat_conversations.
   * @example
   * // Create many Chat_conversations
   * const chat_conversations = await prisma.chat_conversations.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Chat_conversations and only return the `id`
   * const chat_conversationsWithIdOnly = await prisma.chat_conversations.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends chat_conversationsCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, chat_conversationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Chat_conversations.
   * @param {chat_conversationsDeleteArgs} args - Arguments to delete one Chat_conversations.
   * @example
   * // Delete one Chat_conversations
   * const Chat_conversations = await prisma.chat_conversations.delete({
   *   where: {
   *     // ... filter to delete one Chat_conversations
   *   }
   * })
   * 
   */
  delete<T extends chat_conversationsDeleteArgs>(args: Prisma.SelectSubset<T, chat_conversationsDeleteArgs<ExtArgs>>): Prisma.Prisma__chat_conversationsClient<runtime.Types.Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Chat_conversations.
   * @param {chat_conversationsUpdateArgs} args - Arguments to update one Chat_conversations.
   * @example
   * // Update one Chat_conversations
   * const chat_conversations = await prisma.chat_conversations.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends chat_conversationsUpdateArgs>(args: Prisma.SelectSubset<T, chat_conversationsUpdateArgs<ExtArgs>>): Prisma.Prisma__chat_conversationsClient<runtime.Types.Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Chat_conversations.
   * @param {chat_conversationsDeleteManyArgs} args - Arguments to filter Chat_conversations to delete.
   * @example
   * // Delete a few Chat_conversations
   * const { count } = await prisma.chat_conversations.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends chat_conversationsDeleteManyArgs>(args?: Prisma.SelectSubset<T, chat_conversationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Chat_conversations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {chat_conversationsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Chat_conversations
   * const chat_conversations = await prisma.chat_conversations.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends chat_conversationsUpdateManyArgs>(args: Prisma.SelectSubset<T, chat_conversationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Chat_conversations and returns the data updated in the database.
   * @param {chat_conversationsUpdateManyAndReturnArgs} args - Arguments to update many Chat_conversations.
   * @example
   * // Update many Chat_conversations
   * const chat_conversations = await prisma.chat_conversations.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Chat_conversations and only return the `id`
   * const chat_conversationsWithIdOnly = await prisma.chat_conversations.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends chat_conversationsUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, chat_conversationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Chat_conversations.
   * @param {chat_conversationsUpsertArgs} args - Arguments to update or create a Chat_conversations.
   * @example
   * // Update or create a Chat_conversations
   * const chat_conversations = await prisma.chat_conversations.upsert({
   *   create: {
   *     // ... data to create a Chat_conversations
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Chat_conversations we want to update
   *   }
   * })
   */
  upsert<T extends chat_conversationsUpsertArgs>(args: Prisma.SelectSubset<T, chat_conversationsUpsertArgs<ExtArgs>>): Prisma.Prisma__chat_conversationsClient<runtime.Types.Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Chat_conversations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {chat_conversationsCountArgs} args - Arguments to filter Chat_conversations to count.
   * @example
   * // Count the number of Chat_conversations
   * const count = await prisma.chat_conversations.count({
   *   where: {
   *     // ... the filter for the Chat_conversations we want to count
   *   }
   * })
  **/
  count<T extends chat_conversationsCountArgs>(
    args?: Prisma.Subset<T, chat_conversationsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Chat_conversationsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Chat_conversations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Chat_conversationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Chat_conversationsAggregateArgs>(args: Prisma.Subset<T, Chat_conversationsAggregateArgs>): Prisma.PrismaPromise<GetChat_conversationsAggregateType<T>>

  /**
   * Group by Chat_conversations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {chat_conversationsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends chat_conversationsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: chat_conversationsGroupByArgs['orderBy'] }
      : { orderBy?: chat_conversationsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, chat_conversationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChat_conversationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the chat_conversations model
 */
readonly fields: chat_conversationsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for chat_conversations.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__chat_conversationsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  chat_messages<T extends Prisma.chat_conversations$chat_messagesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.chat_conversations$chat_messagesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$chat_messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  chat_participants<T extends Prisma.chat_conversations$chat_participantsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.chat_conversations$chat_participantsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$chat_participantsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the chat_conversations model
 */
export interface chat_conversationsFieldRefs {
  readonly id: Prisma.FieldRef<"chat_conversations", 'Int'>
  readonly user_id: Prisma.FieldRef<"chat_conversations", 'String'>
  readonly user_name: Prisma.FieldRef<"chat_conversations", 'String'>
  readonly user_email: Prisma.FieldRef<"chat_conversations", 'String'>
  readonly admin_id: Prisma.FieldRef<"chat_conversations", 'String'>
  readonly status: Prisma.FieldRef<"chat_conversations", 'String'>
  readonly priority: Prisma.FieldRef<"chat_conversations", 'String'>
  readonly subject: Prisma.FieldRef<"chat_conversations", 'String'>
  readonly last_message_at: Prisma.FieldRef<"chat_conversations", 'DateTime'>
  readonly created_at: Prisma.FieldRef<"chat_conversations", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"chat_conversations", 'DateTime'>
  readonly closed_at: Prisma.FieldRef<"chat_conversations", 'DateTime'>
  readonly closed_by: Prisma.FieldRef<"chat_conversations", 'String'>
  readonly tags: Prisma.FieldRef<"chat_conversations", 'String[]'>
  readonly unread_count_admin: Prisma.FieldRef<"chat_conversations", 'Int'>
  readonly unread_count_user: Prisma.FieldRef<"chat_conversations", 'Int'>
}
    

// Custom InputTypes
/**
 * chat_conversations findUnique
 */
export type chat_conversationsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the chat_conversations
   */
  select?: Prisma.chat_conversationsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the chat_conversations
   */
  omit?: Prisma.chat_conversationsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.chat_conversationsInclude<ExtArgs> | null
  /**
   * Filter, which chat_conversations to fetch.
   */
  where: Prisma.chat_conversationsWhereUniqueInput
}

/**
 * chat_conversations findUniqueOrThrow
 */
export type chat_conversationsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the chat_conversations
   */
  select?: Prisma.chat_conversationsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the chat_conversations
   */
  omit?: Prisma.chat_conversationsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.chat_conversationsInclude<ExtArgs> | null
  /**
   * Filter, which chat_conversations to fetch.
   */
  where: Prisma.chat_conversationsWhereUniqueInput
}

/**
 * chat_conversations findFirst
 */
export type chat_conversationsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the chat_conversations
   */
  select?: Prisma.chat_conversationsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the chat_conversations
   */
  omit?: Prisma.chat_conversationsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.chat_conversationsInclude<ExtArgs> | null
  /**
   * Filter, which chat_conversations to fetch.
   */
  where?: Prisma.chat_conversationsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of chat_conversations to fetch.
   */
  orderBy?: Prisma.chat_conversationsOrderByWithRelationInput | Prisma.chat_conversationsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for chat_conversations.
   */
  cursor?: Prisma.chat_conversationsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` chat_conversations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` chat_conversations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of chat_conversations.
   */
  distinct?: Prisma.Chat_conversationsScalarFieldEnum | Prisma.Chat_conversationsScalarFieldEnum[]
}

/**
 * chat_conversations findFirstOrThrow
 */
export type chat_conversationsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the chat_conversations
   */
  select?: Prisma.chat_conversationsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the chat_conversations
   */
  omit?: Prisma.chat_conversationsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.chat_conversationsInclude<ExtArgs> | null
  /**
   * Filter, which chat_conversations to fetch.
   */
  where?: Prisma.chat_conversationsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of chat_conversations to fetch.
   */
  orderBy?: Prisma.chat_conversationsOrderByWithRelationInput | Prisma.chat_conversationsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for chat_conversations.
   */
  cursor?: Prisma.chat_conversationsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` chat_conversations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` chat_conversations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of chat_conversations.
   */
  distinct?: Prisma.Chat_conversationsScalarFieldEnum | Prisma.Chat_conversationsScalarFieldEnum[]
}

/**
 * chat_conversations findMany
 */
export type chat_conversationsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the chat_conversations
   */
  select?: Prisma.chat_conversationsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the chat_conversations
   */
  omit?: Prisma.chat_conversationsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.chat_conversationsInclude<ExtArgs> | null
  /**
   * Filter, which chat_conversations to fetch.
   */
  where?: Prisma.chat_conversationsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of chat_conversations to fetch.
   */
  orderBy?: Prisma.chat_conversationsOrderByWithRelationInput | Prisma.chat_conversationsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing chat_conversations.
   */
  cursor?: Prisma.chat_conversationsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` chat_conversations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` chat_conversations.
   */
  skip?: number
  distinct?: Prisma.Chat_conversationsScalarFieldEnum | Prisma.Chat_conversationsScalarFieldEnum[]
}

/**
 * chat_conversations create
 */
export type chat_conversationsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the chat_conversations
   */
  select?: Prisma.chat_conversationsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the chat_conversations
   */
  omit?: Prisma.chat_conversationsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.chat_conversationsInclude<ExtArgs> | null
  /**
   * The data needed to create a chat_conversations.
   */
  data: Prisma.XOR<Prisma.chat_conversationsCreateInput, Prisma.chat_conversationsUncheckedCreateInput>
}

/**
 * chat_conversations createMany
 */
export type chat_conversationsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many chat_conversations.
   */
  data: Prisma.chat_conversationsCreateManyInput | Prisma.chat_conversationsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * chat_conversations createManyAndReturn
 */
export type chat_conversationsCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the chat_conversations
   */
  select?: Prisma.chat_conversationsSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the chat_conversations
   */
  omit?: Prisma.chat_conversationsOmit<ExtArgs> | null
  /**
   * The data used to create many chat_conversations.
   */
  data: Prisma.chat_conversationsCreateManyInput | Prisma.chat_conversationsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * chat_conversations update
 */
export type chat_conversationsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the chat_conversations
   */
  select?: Prisma.chat_conversationsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the chat_conversations
   */
  omit?: Prisma.chat_conversationsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.chat_conversationsInclude<ExtArgs> | null
  /**
   * The data needed to update a chat_conversations.
   */
  data: Prisma.XOR<Prisma.chat_conversationsUpdateInput, Prisma.chat_conversationsUncheckedUpdateInput>
  /**
   * Choose, which chat_conversations to update.
   */
  where: Prisma.chat_conversationsWhereUniqueInput
}

/**
 * chat_conversations updateMany
 */
export type chat_conversationsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update chat_conversations.
   */
  data: Prisma.XOR<Prisma.chat_conversationsUpdateManyMutationInput, Prisma.chat_conversationsUncheckedUpdateManyInput>
  /**
   * Filter which chat_conversations to update
   */
  where?: Prisma.chat_conversationsWhereInput
  /**
   * Limit how many chat_conversations to update.
   */
  limit?: number
}

/**
 * chat_conversations updateManyAndReturn
 */
export type chat_conversationsUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the chat_conversations
   */
  select?: Prisma.chat_conversationsSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the chat_conversations
   */
  omit?: Prisma.chat_conversationsOmit<ExtArgs> | null
  /**
   * The data used to update chat_conversations.
   */
  data: Prisma.XOR<Prisma.chat_conversationsUpdateManyMutationInput, Prisma.chat_conversationsUncheckedUpdateManyInput>
  /**
   * Filter which chat_conversations to update
   */
  where?: Prisma.chat_conversationsWhereInput
  /**
   * Limit how many chat_conversations to update.
   */
  limit?: number
}

/**
 * chat_conversations upsert
 */
export type chat_conversationsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the chat_conversations
   */
  select?: Prisma.chat_conversationsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the chat_conversations
   */
  omit?: Prisma.chat_conversationsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.chat_conversationsInclude<ExtArgs> | null
  /**
   * The filter to search for the chat_conversations to update in case it exists.
   */
  where: Prisma.chat_conversationsWhereUniqueInput
  /**
   * In case the chat_conversations found by the `where` argument doesn't exist, create a new chat_conversations with this data.
   */
  create: Prisma.XOR<Prisma.chat_conversationsCreateInput, Prisma.chat_conversationsUncheckedCreateInput>
  /**
   * In case the chat_conversations was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.chat_conversationsUpdateInput, Prisma.chat_conversationsUncheckedUpdateInput>
}

/**
 * chat_conversations delete
 */
export type chat_conversationsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the chat_conversations
   */
  select?: Prisma.chat_conversationsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the chat_conversations
   */
  omit?: Prisma.chat_conversationsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.chat_conversationsInclude<ExtArgs> | null
  /**
   * Filter which chat_conversations to delete.
   */
  where: Prisma.chat_conversationsWhereUniqueInput
}

/**
 * chat_conversations deleteMany
 */
export type chat_conversationsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which chat_conversations to delete
   */
  where?: Prisma.chat_conversationsWhereInput
  /**
   * Limit how many chat_conversations to delete.
   */
  limit?: number
}

/**
 * chat_conversations.chat_messages
 */
export type chat_conversations$chat_messagesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the chat_messages
   */
  select?: Prisma.chat_messagesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the chat_messages
   */
  omit?: Prisma.chat_messagesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.chat_messagesInclude<ExtArgs> | null
  where?: Prisma.chat_messagesWhereInput
  orderBy?: Prisma.chat_messagesOrderByWithRelationInput | Prisma.chat_messagesOrderByWithRelationInput[]
  cursor?: Prisma.chat_messagesWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Chat_messagesScalarFieldEnum | Prisma.Chat_messagesScalarFieldEnum[]
}

/**
 * chat_conversations.chat_participants
 */
export type chat_conversations$chat_participantsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the chat_participants
   */
  select?: Prisma.chat_participantsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the chat_participants
   */
  omit?: Prisma.chat_participantsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.chat_participantsInclude<ExtArgs> | null
  where?: Prisma.chat_participantsWhereInput
  orderBy?: Prisma.chat_participantsOrderByWithRelationInput | Prisma.chat_participantsOrderByWithRelationInput[]
  cursor?: Prisma.chat_participantsWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Chat_participantsScalarFieldEnum | Prisma.Chat_participantsScalarFieldEnum[]
}

/**
 * chat_conversations without action
 */
export type chat_conversationsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the chat_conversations
   */
  select?: Prisma.chat_conversationsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the chat_conversations
   */
  omit?: Prisma.chat_conversationsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.chat_conversationsInclude<ExtArgs> | null
}
