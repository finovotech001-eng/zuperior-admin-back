
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `group_commission_structures` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model group_commission_structures
 * 
 */
export type group_commission_structuresModel = runtime.Types.Result.DefaultSelection<Prisma.$group_commission_structuresPayload>

export type AggregateGroup_commission_structures = {
  _count: Group_commission_structuresCountAggregateOutputType | null
  _avg: Group_commission_structuresAvgAggregateOutputType | null
  _sum: Group_commission_structuresSumAggregateOutputType | null
  _min: Group_commission_structuresMinAggregateOutputType | null
  _max: Group_commission_structuresMaxAggregateOutputType | null
}

export type Group_commission_structuresAvgAggregateOutputType = {
  id: number | null
  usd_per_lot: runtime.Decimal | null
  spread_share_percentage: runtime.Decimal | null
}

export type Group_commission_structuresSumAggregateOutputType = {
  id: number | null
  usd_per_lot: runtime.Decimal | null
  spread_share_percentage: runtime.Decimal | null
}

export type Group_commission_structuresMinAggregateOutputType = {
  id: number | null
  group_id: string | null
  structure_name: string | null
  usd_per_lot: runtime.Decimal | null
  spread_share_percentage: runtime.Decimal | null
  is_active: boolean | null
  created_at: Date | null
  updated_at: Date | null
}

export type Group_commission_structuresMaxAggregateOutputType = {
  id: number | null
  group_id: string | null
  structure_name: string | null
  usd_per_lot: runtime.Decimal | null
  spread_share_percentage: runtime.Decimal | null
  is_active: boolean | null
  created_at: Date | null
  updated_at: Date | null
}

export type Group_commission_structuresCountAggregateOutputType = {
  id: number
  group_id: number
  structure_name: number
  usd_per_lot: number
  spread_share_percentage: number
  is_active: number
  created_at: number
  updated_at: number
  _all: number
}


export type Group_commission_structuresAvgAggregateInputType = {
  id?: true
  usd_per_lot?: true
  spread_share_percentage?: true
}

export type Group_commission_structuresSumAggregateInputType = {
  id?: true
  usd_per_lot?: true
  spread_share_percentage?: true
}

export type Group_commission_structuresMinAggregateInputType = {
  id?: true
  group_id?: true
  structure_name?: true
  usd_per_lot?: true
  spread_share_percentage?: true
  is_active?: true
  created_at?: true
  updated_at?: true
}

export type Group_commission_structuresMaxAggregateInputType = {
  id?: true
  group_id?: true
  structure_name?: true
  usd_per_lot?: true
  spread_share_percentage?: true
  is_active?: true
  created_at?: true
  updated_at?: true
}

export type Group_commission_structuresCountAggregateInputType = {
  id?: true
  group_id?: true
  structure_name?: true
  usd_per_lot?: true
  spread_share_percentage?: true
  is_active?: true
  created_at?: true
  updated_at?: true
  _all?: true
}

export type Group_commission_structuresAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which group_commission_structures to aggregate.
   */
  where?: Prisma.group_commission_structuresWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of group_commission_structures to fetch.
   */
  orderBy?: Prisma.group_commission_structuresOrderByWithRelationInput | Prisma.group_commission_structuresOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.group_commission_structuresWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` group_commission_structures from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` group_commission_structures.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned group_commission_structures
  **/
  _count?: true | Group_commission_structuresCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Group_commission_structuresAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Group_commission_structuresSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Group_commission_structuresMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Group_commission_structuresMaxAggregateInputType
}

export type GetGroup_commission_structuresAggregateType<T extends Group_commission_structuresAggregateArgs> = {
      [P in keyof T & keyof AggregateGroup_commission_structures]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateGroup_commission_structures[P]>
    : Prisma.GetScalarType<T[P], AggregateGroup_commission_structures[P]>
}




export type group_commission_structuresGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.group_commission_structuresWhereInput
  orderBy?: Prisma.group_commission_structuresOrderByWithAggregationInput | Prisma.group_commission_structuresOrderByWithAggregationInput[]
  by: Prisma.Group_commission_structuresScalarFieldEnum[] | Prisma.Group_commission_structuresScalarFieldEnum
  having?: Prisma.group_commission_structuresScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Group_commission_structuresCountAggregateInputType | true
  _avg?: Group_commission_structuresAvgAggregateInputType
  _sum?: Group_commission_structuresSumAggregateInputType
  _min?: Group_commission_structuresMinAggregateInputType
  _max?: Group_commission_structuresMaxAggregateInputType
}

export type Group_commission_structuresGroupByOutputType = {
  id: number
  group_id: string
  structure_name: string
  usd_per_lot: runtime.Decimal
  spread_share_percentage: runtime.Decimal
  is_active: boolean
  created_at: Date | null
  updated_at: Date | null
  _count: Group_commission_structuresCountAggregateOutputType | null
  _avg: Group_commission_structuresAvgAggregateOutputType | null
  _sum: Group_commission_structuresSumAggregateOutputType | null
  _min: Group_commission_structuresMinAggregateOutputType | null
  _max: Group_commission_structuresMaxAggregateOutputType | null
}

type GetGroup_commission_structuresGroupByPayload<T extends group_commission_structuresGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Group_commission_structuresGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Group_commission_structuresGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Group_commission_structuresGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Group_commission_structuresGroupByOutputType[P]>
      }
    >
  >



export type group_commission_structuresWhereInput = {
  AND?: Prisma.group_commission_structuresWhereInput | Prisma.group_commission_structuresWhereInput[]
  OR?: Prisma.group_commission_structuresWhereInput[]
  NOT?: Prisma.group_commission_structuresWhereInput | Prisma.group_commission_structuresWhereInput[]
  id?: Prisma.IntFilter<"group_commission_structures"> | number
  group_id?: Prisma.StringFilter<"group_commission_structures"> | string
  structure_name?: Prisma.StringFilter<"group_commission_structures"> | string
  usd_per_lot?: Prisma.DecimalFilter<"group_commission_structures"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  spread_share_percentage?: Prisma.DecimalFilter<"group_commission_structures"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  is_active?: Prisma.BoolFilter<"group_commission_structures"> | boolean
  created_at?: Prisma.DateTimeNullableFilter<"group_commission_structures"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"group_commission_structures"> | Date | string | null
}

export type group_commission_structuresOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  group_id?: Prisma.SortOrder
  structure_name?: Prisma.SortOrder
  usd_per_lot?: Prisma.SortOrder
  spread_share_percentage?: Prisma.SortOrder
  is_active?: Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
}

export type group_commission_structuresWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  group_id_structure_name?: Prisma.group_commission_structuresGroup_idStructure_nameCompoundUniqueInput
  AND?: Prisma.group_commission_structuresWhereInput | Prisma.group_commission_structuresWhereInput[]
  OR?: Prisma.group_commission_structuresWhereInput[]
  NOT?: Prisma.group_commission_structuresWhereInput | Prisma.group_commission_structuresWhereInput[]
  group_id?: Prisma.StringFilter<"group_commission_structures"> | string
  structure_name?: Prisma.StringFilter<"group_commission_structures"> | string
  usd_per_lot?: Prisma.DecimalFilter<"group_commission_structures"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  spread_share_percentage?: Prisma.DecimalFilter<"group_commission_structures"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  is_active?: Prisma.BoolFilter<"group_commission_structures"> | boolean
  created_at?: Prisma.DateTimeNullableFilter<"group_commission_structures"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"group_commission_structures"> | Date | string | null
}, "id" | "group_id_structure_name">

export type group_commission_structuresOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  group_id?: Prisma.SortOrder
  structure_name?: Prisma.SortOrder
  usd_per_lot?: Prisma.SortOrder
  spread_share_percentage?: Prisma.SortOrder
  is_active?: Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.group_commission_structuresCountOrderByAggregateInput
  _avg?: Prisma.group_commission_structuresAvgOrderByAggregateInput
  _max?: Prisma.group_commission_structuresMaxOrderByAggregateInput
  _min?: Prisma.group_commission_structuresMinOrderByAggregateInput
  _sum?: Prisma.group_commission_structuresSumOrderByAggregateInput
}

export type group_commission_structuresScalarWhereWithAggregatesInput = {
  AND?: Prisma.group_commission_structuresScalarWhereWithAggregatesInput | Prisma.group_commission_structuresScalarWhereWithAggregatesInput[]
  OR?: Prisma.group_commission_structuresScalarWhereWithAggregatesInput[]
  NOT?: Prisma.group_commission_structuresScalarWhereWithAggregatesInput | Prisma.group_commission_structuresScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"group_commission_structures"> | number
  group_id?: Prisma.StringWithAggregatesFilter<"group_commission_structures"> | string
  structure_name?: Prisma.StringWithAggregatesFilter<"group_commission_structures"> | string
  usd_per_lot?: Prisma.DecimalWithAggregatesFilter<"group_commission_structures"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  spread_share_percentage?: Prisma.DecimalWithAggregatesFilter<"group_commission_structures"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  is_active?: Prisma.BoolWithAggregatesFilter<"group_commission_structures"> | boolean
  created_at?: Prisma.DateTimeNullableWithAggregatesFilter<"group_commission_structures"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableWithAggregatesFilter<"group_commission_structures"> | Date | string | null
}

export type group_commission_structuresCreateInput = {
  group_id: string
  structure_name: string
  usd_per_lot?: runtime.Decimal | runtime.DecimalJsLike | number | string
  spread_share_percentage?: runtime.Decimal | runtime.DecimalJsLike | number | string
  is_active?: boolean
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type group_commission_structuresUncheckedCreateInput = {
  id?: number
  group_id: string
  structure_name: string
  usd_per_lot?: runtime.Decimal | runtime.DecimalJsLike | number | string
  spread_share_percentage?: runtime.Decimal | runtime.DecimalJsLike | number | string
  is_active?: boolean
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type group_commission_structuresUpdateInput = {
  group_id?: Prisma.StringFieldUpdateOperationsInput | string
  structure_name?: Prisma.StringFieldUpdateOperationsInput | string
  usd_per_lot?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  spread_share_percentage?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type group_commission_structuresUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  group_id?: Prisma.StringFieldUpdateOperationsInput | string
  structure_name?: Prisma.StringFieldUpdateOperationsInput | string
  usd_per_lot?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  spread_share_percentage?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type group_commission_structuresCreateManyInput = {
  id?: number
  group_id: string
  structure_name: string
  usd_per_lot?: runtime.Decimal | runtime.DecimalJsLike | number | string
  spread_share_percentage?: runtime.Decimal | runtime.DecimalJsLike | number | string
  is_active?: boolean
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type group_commission_structuresUpdateManyMutationInput = {
  group_id?: Prisma.StringFieldUpdateOperationsInput | string
  structure_name?: Prisma.StringFieldUpdateOperationsInput | string
  usd_per_lot?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  spread_share_percentage?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type group_commission_structuresUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  group_id?: Prisma.StringFieldUpdateOperationsInput | string
  structure_name?: Prisma.StringFieldUpdateOperationsInput | string
  usd_per_lot?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  spread_share_percentage?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  is_active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type group_commission_structuresGroup_idStructure_nameCompoundUniqueInput = {
  group_id: string
  structure_name: string
}

export type group_commission_structuresCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  group_id?: Prisma.SortOrder
  structure_name?: Prisma.SortOrder
  usd_per_lot?: Prisma.SortOrder
  spread_share_percentage?: Prisma.SortOrder
  is_active?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type group_commission_structuresAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  usd_per_lot?: Prisma.SortOrder
  spread_share_percentage?: Prisma.SortOrder
}

export type group_commission_structuresMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  group_id?: Prisma.SortOrder
  structure_name?: Prisma.SortOrder
  usd_per_lot?: Prisma.SortOrder
  spread_share_percentage?: Prisma.SortOrder
  is_active?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type group_commission_structuresMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  group_id?: Prisma.SortOrder
  structure_name?: Prisma.SortOrder
  usd_per_lot?: Prisma.SortOrder
  spread_share_percentage?: Prisma.SortOrder
  is_active?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type group_commission_structuresSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  usd_per_lot?: Prisma.SortOrder
  spread_share_percentage?: Prisma.SortOrder
}

export type DecimalFieldUpdateOperationsInput = {
  set?: runtime.Decimal | runtime.DecimalJsLike | number | string
  increment?: runtime.Decimal | runtime.DecimalJsLike | number | string
  decrement?: runtime.Decimal | runtime.DecimalJsLike | number | string
  multiply?: runtime.Decimal | runtime.DecimalJsLike | number | string
  divide?: runtime.Decimal | runtime.DecimalJsLike | number | string
}



export type group_commission_structuresSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  group_id?: boolean
  structure_name?: boolean
  usd_per_lot?: boolean
  spread_share_percentage?: boolean
  is_active?: boolean
  created_at?: boolean
  updated_at?: boolean
}, ExtArgs["result"]["group_commission_structures"]>

export type group_commission_structuresSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  group_id?: boolean
  structure_name?: boolean
  usd_per_lot?: boolean
  spread_share_percentage?: boolean
  is_active?: boolean
  created_at?: boolean
  updated_at?: boolean
}, ExtArgs["result"]["group_commission_structures"]>

export type group_commission_structuresSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  group_id?: boolean
  structure_name?: boolean
  usd_per_lot?: boolean
  spread_share_percentage?: boolean
  is_active?: boolean
  created_at?: boolean
  updated_at?: boolean
}, ExtArgs["result"]["group_commission_structures"]>

export type group_commission_structuresSelectScalar = {
  id?: boolean
  group_id?: boolean
  structure_name?: boolean
  usd_per_lot?: boolean
  spread_share_percentage?: boolean
  is_active?: boolean
  created_at?: boolean
  updated_at?: boolean
}

export type group_commission_structuresOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "group_id" | "structure_name" | "usd_per_lot" | "spread_share_percentage" | "is_active" | "created_at" | "updated_at", ExtArgs["result"]["group_commission_structures"]>

export type $group_commission_structuresPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "group_commission_structures"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    group_id: string
    structure_name: string
    usd_per_lot: runtime.Decimal
    spread_share_percentage: runtime.Decimal
    is_active: boolean
    created_at: Date | null
    updated_at: Date | null
  }, ExtArgs["result"]["group_commission_structures"]>
  composites: {}
}

export type group_commission_structuresGetPayload<S extends boolean | null | undefined | group_commission_structuresDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$group_commission_structuresPayload, S>

export type group_commission_structuresCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<group_commission_structuresFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Group_commission_structuresCountAggregateInputType | true
  }

export interface group_commission_structuresDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['group_commission_structures'], meta: { name: 'group_commission_structures' } }
  /**
   * Find zero or one Group_commission_structures that matches the filter.
   * @param {group_commission_structuresFindUniqueArgs} args - Arguments to find a Group_commission_structures
   * @example
   * // Get one Group_commission_structures
   * const group_commission_structures = await prisma.group_commission_structures.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends group_commission_structuresFindUniqueArgs>(args: Prisma.SelectSubset<T, group_commission_structuresFindUniqueArgs<ExtArgs>>): Prisma.Prisma__group_commission_structuresClient<runtime.Types.Result.GetResult<Prisma.$group_commission_structuresPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Group_commission_structures that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {group_commission_structuresFindUniqueOrThrowArgs} args - Arguments to find a Group_commission_structures
   * @example
   * // Get one Group_commission_structures
   * const group_commission_structures = await prisma.group_commission_structures.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends group_commission_structuresFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, group_commission_structuresFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__group_commission_structuresClient<runtime.Types.Result.GetResult<Prisma.$group_commission_structuresPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Group_commission_structures that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {group_commission_structuresFindFirstArgs} args - Arguments to find a Group_commission_structures
   * @example
   * // Get one Group_commission_structures
   * const group_commission_structures = await prisma.group_commission_structures.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends group_commission_structuresFindFirstArgs>(args?: Prisma.SelectSubset<T, group_commission_structuresFindFirstArgs<ExtArgs>>): Prisma.Prisma__group_commission_structuresClient<runtime.Types.Result.GetResult<Prisma.$group_commission_structuresPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Group_commission_structures that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {group_commission_structuresFindFirstOrThrowArgs} args - Arguments to find a Group_commission_structures
   * @example
   * // Get one Group_commission_structures
   * const group_commission_structures = await prisma.group_commission_structures.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends group_commission_structuresFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, group_commission_structuresFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__group_commission_structuresClient<runtime.Types.Result.GetResult<Prisma.$group_commission_structuresPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Group_commission_structures that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {group_commission_structuresFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Group_commission_structures
   * const group_commission_structures = await prisma.group_commission_structures.findMany()
   * 
   * // Get first 10 Group_commission_structures
   * const group_commission_structures = await prisma.group_commission_structures.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const group_commission_structuresWithIdOnly = await prisma.group_commission_structures.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends group_commission_structuresFindManyArgs>(args?: Prisma.SelectSubset<T, group_commission_structuresFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$group_commission_structuresPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Group_commission_structures.
   * @param {group_commission_structuresCreateArgs} args - Arguments to create a Group_commission_structures.
   * @example
   * // Create one Group_commission_structures
   * const Group_commission_structures = await prisma.group_commission_structures.create({
   *   data: {
   *     // ... data to create a Group_commission_structures
   *   }
   * })
   * 
   */
  create<T extends group_commission_structuresCreateArgs>(args: Prisma.SelectSubset<T, group_commission_structuresCreateArgs<ExtArgs>>): Prisma.Prisma__group_commission_structuresClient<runtime.Types.Result.GetResult<Prisma.$group_commission_structuresPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Group_commission_structures.
   * @param {group_commission_structuresCreateManyArgs} args - Arguments to create many Group_commission_structures.
   * @example
   * // Create many Group_commission_structures
   * const group_commission_structures = await prisma.group_commission_structures.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends group_commission_structuresCreateManyArgs>(args?: Prisma.SelectSubset<T, group_commission_structuresCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Group_commission_structures and returns the data saved in the database.
   * @param {group_commission_structuresCreateManyAndReturnArgs} args - Arguments to create many Group_commission_structures.
   * @example
   * // Create many Group_commission_structures
   * const group_commission_structures = await prisma.group_commission_structures.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Group_commission_structures and only return the `id`
   * const group_commission_structuresWithIdOnly = await prisma.group_commission_structures.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends group_commission_structuresCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, group_commission_structuresCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$group_commission_structuresPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Group_commission_structures.
   * @param {group_commission_structuresDeleteArgs} args - Arguments to delete one Group_commission_structures.
   * @example
   * // Delete one Group_commission_structures
   * const Group_commission_structures = await prisma.group_commission_structures.delete({
   *   where: {
   *     // ... filter to delete one Group_commission_structures
   *   }
   * })
   * 
   */
  delete<T extends group_commission_structuresDeleteArgs>(args: Prisma.SelectSubset<T, group_commission_structuresDeleteArgs<ExtArgs>>): Prisma.Prisma__group_commission_structuresClient<runtime.Types.Result.GetResult<Prisma.$group_commission_structuresPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Group_commission_structures.
   * @param {group_commission_structuresUpdateArgs} args - Arguments to update one Group_commission_structures.
   * @example
   * // Update one Group_commission_structures
   * const group_commission_structures = await prisma.group_commission_structures.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends group_commission_structuresUpdateArgs>(args: Prisma.SelectSubset<T, group_commission_structuresUpdateArgs<ExtArgs>>): Prisma.Prisma__group_commission_structuresClient<runtime.Types.Result.GetResult<Prisma.$group_commission_structuresPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Group_commission_structures.
   * @param {group_commission_structuresDeleteManyArgs} args - Arguments to filter Group_commission_structures to delete.
   * @example
   * // Delete a few Group_commission_structures
   * const { count } = await prisma.group_commission_structures.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends group_commission_structuresDeleteManyArgs>(args?: Prisma.SelectSubset<T, group_commission_structuresDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Group_commission_structures.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {group_commission_structuresUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Group_commission_structures
   * const group_commission_structures = await prisma.group_commission_structures.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends group_commission_structuresUpdateManyArgs>(args: Prisma.SelectSubset<T, group_commission_structuresUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Group_commission_structures and returns the data updated in the database.
   * @param {group_commission_structuresUpdateManyAndReturnArgs} args - Arguments to update many Group_commission_structures.
   * @example
   * // Update many Group_commission_structures
   * const group_commission_structures = await prisma.group_commission_structures.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Group_commission_structures and only return the `id`
   * const group_commission_structuresWithIdOnly = await prisma.group_commission_structures.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends group_commission_structuresUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, group_commission_structuresUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$group_commission_structuresPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Group_commission_structures.
   * @param {group_commission_structuresUpsertArgs} args - Arguments to update or create a Group_commission_structures.
   * @example
   * // Update or create a Group_commission_structures
   * const group_commission_structures = await prisma.group_commission_structures.upsert({
   *   create: {
   *     // ... data to create a Group_commission_structures
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Group_commission_structures we want to update
   *   }
   * })
   */
  upsert<T extends group_commission_structuresUpsertArgs>(args: Prisma.SelectSubset<T, group_commission_structuresUpsertArgs<ExtArgs>>): Prisma.Prisma__group_commission_structuresClient<runtime.Types.Result.GetResult<Prisma.$group_commission_structuresPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Group_commission_structures.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {group_commission_structuresCountArgs} args - Arguments to filter Group_commission_structures to count.
   * @example
   * // Count the number of Group_commission_structures
   * const count = await prisma.group_commission_structures.count({
   *   where: {
   *     // ... the filter for the Group_commission_structures we want to count
   *   }
   * })
  **/
  count<T extends group_commission_structuresCountArgs>(
    args?: Prisma.Subset<T, group_commission_structuresCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Group_commission_structuresCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Group_commission_structures.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Group_commission_structuresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Group_commission_structuresAggregateArgs>(args: Prisma.Subset<T, Group_commission_structuresAggregateArgs>): Prisma.PrismaPromise<GetGroup_commission_structuresAggregateType<T>>

  /**
   * Group by Group_commission_structures.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {group_commission_structuresGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends group_commission_structuresGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: group_commission_structuresGroupByArgs['orderBy'] }
      : { orderBy?: group_commission_structuresGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, group_commission_structuresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGroup_commission_structuresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the group_commission_structures model
 */
readonly fields: group_commission_structuresFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for group_commission_structures.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__group_commission_structuresClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the group_commission_structures model
 */
export interface group_commission_structuresFieldRefs {
  readonly id: Prisma.FieldRef<"group_commission_structures", 'Int'>
  readonly group_id: Prisma.FieldRef<"group_commission_structures", 'String'>
  readonly structure_name: Prisma.FieldRef<"group_commission_structures", 'String'>
  readonly usd_per_lot: Prisma.FieldRef<"group_commission_structures", 'Decimal'>
  readonly spread_share_percentage: Prisma.FieldRef<"group_commission_structures", 'Decimal'>
  readonly is_active: Prisma.FieldRef<"group_commission_structures", 'Boolean'>
  readonly created_at: Prisma.FieldRef<"group_commission_structures", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"group_commission_structures", 'DateTime'>
}
    

// Custom InputTypes
/**
 * group_commission_structures findUnique
 */
export type group_commission_structuresFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the group_commission_structures
   */
  select?: Prisma.group_commission_structuresSelect<ExtArgs> | null
  /**
   * Omit specific fields from the group_commission_structures
   */
  omit?: Prisma.group_commission_structuresOmit<ExtArgs> | null
  /**
   * Filter, which group_commission_structures to fetch.
   */
  where: Prisma.group_commission_structuresWhereUniqueInput
}

/**
 * group_commission_structures findUniqueOrThrow
 */
export type group_commission_structuresFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the group_commission_structures
   */
  select?: Prisma.group_commission_structuresSelect<ExtArgs> | null
  /**
   * Omit specific fields from the group_commission_structures
   */
  omit?: Prisma.group_commission_structuresOmit<ExtArgs> | null
  /**
   * Filter, which group_commission_structures to fetch.
   */
  where: Prisma.group_commission_structuresWhereUniqueInput
}

/**
 * group_commission_structures findFirst
 */
export type group_commission_structuresFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the group_commission_structures
   */
  select?: Prisma.group_commission_structuresSelect<ExtArgs> | null
  /**
   * Omit specific fields from the group_commission_structures
   */
  omit?: Prisma.group_commission_structuresOmit<ExtArgs> | null
  /**
   * Filter, which group_commission_structures to fetch.
   */
  where?: Prisma.group_commission_structuresWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of group_commission_structures to fetch.
   */
  orderBy?: Prisma.group_commission_structuresOrderByWithRelationInput | Prisma.group_commission_structuresOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for group_commission_structures.
   */
  cursor?: Prisma.group_commission_structuresWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` group_commission_structures from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` group_commission_structures.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of group_commission_structures.
   */
  distinct?: Prisma.Group_commission_structuresScalarFieldEnum | Prisma.Group_commission_structuresScalarFieldEnum[]
}

/**
 * group_commission_structures findFirstOrThrow
 */
export type group_commission_structuresFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the group_commission_structures
   */
  select?: Prisma.group_commission_structuresSelect<ExtArgs> | null
  /**
   * Omit specific fields from the group_commission_structures
   */
  omit?: Prisma.group_commission_structuresOmit<ExtArgs> | null
  /**
   * Filter, which group_commission_structures to fetch.
   */
  where?: Prisma.group_commission_structuresWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of group_commission_structures to fetch.
   */
  orderBy?: Prisma.group_commission_structuresOrderByWithRelationInput | Prisma.group_commission_structuresOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for group_commission_structures.
   */
  cursor?: Prisma.group_commission_structuresWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` group_commission_structures from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` group_commission_structures.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of group_commission_structures.
   */
  distinct?: Prisma.Group_commission_structuresScalarFieldEnum | Prisma.Group_commission_structuresScalarFieldEnum[]
}

/**
 * group_commission_structures findMany
 */
export type group_commission_structuresFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the group_commission_structures
   */
  select?: Prisma.group_commission_structuresSelect<ExtArgs> | null
  /**
   * Omit specific fields from the group_commission_structures
   */
  omit?: Prisma.group_commission_structuresOmit<ExtArgs> | null
  /**
   * Filter, which group_commission_structures to fetch.
   */
  where?: Prisma.group_commission_structuresWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of group_commission_structures to fetch.
   */
  orderBy?: Prisma.group_commission_structuresOrderByWithRelationInput | Prisma.group_commission_structuresOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing group_commission_structures.
   */
  cursor?: Prisma.group_commission_structuresWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` group_commission_structures from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` group_commission_structures.
   */
  skip?: number
  distinct?: Prisma.Group_commission_structuresScalarFieldEnum | Prisma.Group_commission_structuresScalarFieldEnum[]
}

/**
 * group_commission_structures create
 */
export type group_commission_structuresCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the group_commission_structures
   */
  select?: Prisma.group_commission_structuresSelect<ExtArgs> | null
  /**
   * Omit specific fields from the group_commission_structures
   */
  omit?: Prisma.group_commission_structuresOmit<ExtArgs> | null
  /**
   * The data needed to create a group_commission_structures.
   */
  data: Prisma.XOR<Prisma.group_commission_structuresCreateInput, Prisma.group_commission_structuresUncheckedCreateInput>
}

/**
 * group_commission_structures createMany
 */
export type group_commission_structuresCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many group_commission_structures.
   */
  data: Prisma.group_commission_structuresCreateManyInput | Prisma.group_commission_structuresCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * group_commission_structures createManyAndReturn
 */
export type group_commission_structuresCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the group_commission_structures
   */
  select?: Prisma.group_commission_structuresSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the group_commission_structures
   */
  omit?: Prisma.group_commission_structuresOmit<ExtArgs> | null
  /**
   * The data used to create many group_commission_structures.
   */
  data: Prisma.group_commission_structuresCreateManyInput | Prisma.group_commission_structuresCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * group_commission_structures update
 */
export type group_commission_structuresUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the group_commission_structures
   */
  select?: Prisma.group_commission_structuresSelect<ExtArgs> | null
  /**
   * Omit specific fields from the group_commission_structures
   */
  omit?: Prisma.group_commission_structuresOmit<ExtArgs> | null
  /**
   * The data needed to update a group_commission_structures.
   */
  data: Prisma.XOR<Prisma.group_commission_structuresUpdateInput, Prisma.group_commission_structuresUncheckedUpdateInput>
  /**
   * Choose, which group_commission_structures to update.
   */
  where: Prisma.group_commission_structuresWhereUniqueInput
}

/**
 * group_commission_structures updateMany
 */
export type group_commission_structuresUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update group_commission_structures.
   */
  data: Prisma.XOR<Prisma.group_commission_structuresUpdateManyMutationInput, Prisma.group_commission_structuresUncheckedUpdateManyInput>
  /**
   * Filter which group_commission_structures to update
   */
  where?: Prisma.group_commission_structuresWhereInput
  /**
   * Limit how many group_commission_structures to update.
   */
  limit?: number
}

/**
 * group_commission_structures updateManyAndReturn
 */
export type group_commission_structuresUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the group_commission_structures
   */
  select?: Prisma.group_commission_structuresSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the group_commission_structures
   */
  omit?: Prisma.group_commission_structuresOmit<ExtArgs> | null
  /**
   * The data used to update group_commission_structures.
   */
  data: Prisma.XOR<Prisma.group_commission_structuresUpdateManyMutationInput, Prisma.group_commission_structuresUncheckedUpdateManyInput>
  /**
   * Filter which group_commission_structures to update
   */
  where?: Prisma.group_commission_structuresWhereInput
  /**
   * Limit how many group_commission_structures to update.
   */
  limit?: number
}

/**
 * group_commission_structures upsert
 */
export type group_commission_structuresUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the group_commission_structures
   */
  select?: Prisma.group_commission_structuresSelect<ExtArgs> | null
  /**
   * Omit specific fields from the group_commission_structures
   */
  omit?: Prisma.group_commission_structuresOmit<ExtArgs> | null
  /**
   * The filter to search for the group_commission_structures to update in case it exists.
   */
  where: Prisma.group_commission_structuresWhereUniqueInput
  /**
   * In case the group_commission_structures found by the `where` argument doesn't exist, create a new group_commission_structures with this data.
   */
  create: Prisma.XOR<Prisma.group_commission_structuresCreateInput, Prisma.group_commission_structuresUncheckedCreateInput>
  /**
   * In case the group_commission_structures was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.group_commission_structuresUpdateInput, Prisma.group_commission_structuresUncheckedUpdateInput>
}

/**
 * group_commission_structures delete
 */
export type group_commission_structuresDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the group_commission_structures
   */
  select?: Prisma.group_commission_structuresSelect<ExtArgs> | null
  /**
   * Omit specific fields from the group_commission_structures
   */
  omit?: Prisma.group_commission_structuresOmit<ExtArgs> | null
  /**
   * Filter which group_commission_structures to delete.
   */
  where: Prisma.group_commission_structuresWhereUniqueInput
}

/**
 * group_commission_structures deleteMany
 */
export type group_commission_structuresDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which group_commission_structures to delete
   */
  where?: Prisma.group_commission_structuresWhereInput
  /**
   * Limit how many group_commission_structures to delete.
   */
  limit?: number
}

/**
 * group_commission_structures without action
 */
export type group_commission_structuresDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the group_commission_structures
   */
  select?: Prisma.group_commission_structuresSelect<ExtArgs> | null
  /**
   * Omit specific fields from the group_commission_structures
   */
  omit?: Prisma.group_commission_structuresOmit<ExtArgs> | null
}
