
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `mt5_groups` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model mt5_groups
 * 
 */
export type mt5_groupsModel = runtime.Types.Result.DefaultSelection<Prisma.$mt5_groupsPayload>

export type AggregateMt5_groups = {
  _count: Mt5_groupsCountAggregateOutputType | null
  _avg: Mt5_groupsAvgAggregateOutputType | null
  _sum: Mt5_groupsSumAggregateOutputType | null
  _min: Mt5_groupsMinAggregateOutputType | null
  _max: Mt5_groupsMaxAggregateOutputType | null
}

export type Mt5_groupsAvgAggregateOutputType = {
  id: number | null
}

export type Mt5_groupsSumAggregateOutputType = {
  id: number | null
}

export type Mt5_groupsMinAggregateOutputType = {
  id: number | null
  group_id: string | null
  name: string | null
  description: string | null
  synced_at: Date | null
  created_at: Date | null
  updated_at: Date | null
}

export type Mt5_groupsMaxAggregateOutputType = {
  id: number | null
  group_id: string | null
  name: string | null
  description: string | null
  synced_at: Date | null
  created_at: Date | null
  updated_at: Date | null
}

export type Mt5_groupsCountAggregateOutputType = {
  id: number
  group_id: number
  name: number
  description: number
  synced_at: number
  created_at: number
  updated_at: number
  _all: number
}


export type Mt5_groupsAvgAggregateInputType = {
  id?: true
}

export type Mt5_groupsSumAggregateInputType = {
  id?: true
}

export type Mt5_groupsMinAggregateInputType = {
  id?: true
  group_id?: true
  name?: true
  description?: true
  synced_at?: true
  created_at?: true
  updated_at?: true
}

export type Mt5_groupsMaxAggregateInputType = {
  id?: true
  group_id?: true
  name?: true
  description?: true
  synced_at?: true
  created_at?: true
  updated_at?: true
}

export type Mt5_groupsCountAggregateInputType = {
  id?: true
  group_id?: true
  name?: true
  description?: true
  synced_at?: true
  created_at?: true
  updated_at?: true
  _all?: true
}

export type Mt5_groupsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which mt5_groups to aggregate.
   */
  where?: Prisma.mt5_groupsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of mt5_groups to fetch.
   */
  orderBy?: Prisma.mt5_groupsOrderByWithRelationInput | Prisma.mt5_groupsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.mt5_groupsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` mt5_groups from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` mt5_groups.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned mt5_groups
  **/
  _count?: true | Mt5_groupsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Mt5_groupsAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Mt5_groupsSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Mt5_groupsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Mt5_groupsMaxAggregateInputType
}

export type GetMt5_groupsAggregateType<T extends Mt5_groupsAggregateArgs> = {
      [P in keyof T & keyof AggregateMt5_groups]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateMt5_groups[P]>
    : Prisma.GetScalarType<T[P], AggregateMt5_groups[P]>
}




export type mt5_groupsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.mt5_groupsWhereInput
  orderBy?: Prisma.mt5_groupsOrderByWithAggregationInput | Prisma.mt5_groupsOrderByWithAggregationInput[]
  by: Prisma.Mt5_groupsScalarFieldEnum[] | Prisma.Mt5_groupsScalarFieldEnum
  having?: Prisma.mt5_groupsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Mt5_groupsCountAggregateInputType | true
  _avg?: Mt5_groupsAvgAggregateInputType
  _sum?: Mt5_groupsSumAggregateInputType
  _min?: Mt5_groupsMinAggregateInputType
  _max?: Mt5_groupsMaxAggregateInputType
}

export type Mt5_groupsGroupByOutputType = {
  id: number
  group_id: string
  name: string
  description: string | null
  synced_at: Date | null
  created_at: Date | null
  updated_at: Date | null
  _count: Mt5_groupsCountAggregateOutputType | null
  _avg: Mt5_groupsAvgAggregateOutputType | null
  _sum: Mt5_groupsSumAggregateOutputType | null
  _min: Mt5_groupsMinAggregateOutputType | null
  _max: Mt5_groupsMaxAggregateOutputType | null
}

type GetMt5_groupsGroupByPayload<T extends mt5_groupsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Mt5_groupsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Mt5_groupsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Mt5_groupsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Mt5_groupsGroupByOutputType[P]>
      }
    >
  >



export type mt5_groupsWhereInput = {
  AND?: Prisma.mt5_groupsWhereInput | Prisma.mt5_groupsWhereInput[]
  OR?: Prisma.mt5_groupsWhereInput[]
  NOT?: Prisma.mt5_groupsWhereInput | Prisma.mt5_groupsWhereInput[]
  id?: Prisma.IntFilter<"mt5_groups"> | number
  group_id?: Prisma.StringFilter<"mt5_groups"> | string
  name?: Prisma.StringFilter<"mt5_groups"> | string
  description?: Prisma.StringNullableFilter<"mt5_groups"> | string | null
  synced_at?: Prisma.DateTimeNullableFilter<"mt5_groups"> | Date | string | null
  created_at?: Prisma.DateTimeNullableFilter<"mt5_groups"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"mt5_groups"> | Date | string | null
}

export type mt5_groupsOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  group_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  synced_at?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
}

export type mt5_groupsWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  group_id?: string
  AND?: Prisma.mt5_groupsWhereInput | Prisma.mt5_groupsWhereInput[]
  OR?: Prisma.mt5_groupsWhereInput[]
  NOT?: Prisma.mt5_groupsWhereInput | Prisma.mt5_groupsWhereInput[]
  name?: Prisma.StringFilter<"mt5_groups"> | string
  description?: Prisma.StringNullableFilter<"mt5_groups"> | string | null
  synced_at?: Prisma.DateTimeNullableFilter<"mt5_groups"> | Date | string | null
  created_at?: Prisma.DateTimeNullableFilter<"mt5_groups"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"mt5_groups"> | Date | string | null
}, "id" | "group_id">

export type mt5_groupsOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  group_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  synced_at?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.mt5_groupsCountOrderByAggregateInput
  _avg?: Prisma.mt5_groupsAvgOrderByAggregateInput
  _max?: Prisma.mt5_groupsMaxOrderByAggregateInput
  _min?: Prisma.mt5_groupsMinOrderByAggregateInput
  _sum?: Prisma.mt5_groupsSumOrderByAggregateInput
}

export type mt5_groupsScalarWhereWithAggregatesInput = {
  AND?: Prisma.mt5_groupsScalarWhereWithAggregatesInput | Prisma.mt5_groupsScalarWhereWithAggregatesInput[]
  OR?: Prisma.mt5_groupsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.mt5_groupsScalarWhereWithAggregatesInput | Prisma.mt5_groupsScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"mt5_groups"> | number
  group_id?: Prisma.StringWithAggregatesFilter<"mt5_groups"> | string
  name?: Prisma.StringWithAggregatesFilter<"mt5_groups"> | string
  description?: Prisma.StringNullableWithAggregatesFilter<"mt5_groups"> | string | null
  synced_at?: Prisma.DateTimeNullableWithAggregatesFilter<"mt5_groups"> | Date | string | null
  created_at?: Prisma.DateTimeNullableWithAggregatesFilter<"mt5_groups"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableWithAggregatesFilter<"mt5_groups"> | Date | string | null
}

export type mt5_groupsCreateInput = {
  group_id: string
  name: string
  description?: string | null
  synced_at?: Date | string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type mt5_groupsUncheckedCreateInput = {
  id?: number
  group_id: string
  name: string
  description?: string | null
  synced_at?: Date | string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type mt5_groupsUpdateInput = {
  group_id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  synced_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type mt5_groupsUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  group_id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  synced_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type mt5_groupsCreateManyInput = {
  id?: number
  group_id: string
  name: string
  description?: string | null
  synced_at?: Date | string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type mt5_groupsUpdateManyMutationInput = {
  group_id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  synced_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type mt5_groupsUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  group_id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  synced_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type mt5_groupsCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  group_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  synced_at?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type mt5_groupsAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
}

export type mt5_groupsMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  group_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  synced_at?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type mt5_groupsMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  group_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  synced_at?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type mt5_groupsSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
}



export type mt5_groupsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  group_id?: boolean
  name?: boolean
  description?: boolean
  synced_at?: boolean
  created_at?: boolean
  updated_at?: boolean
}, ExtArgs["result"]["mt5_groups"]>

export type mt5_groupsSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  group_id?: boolean
  name?: boolean
  description?: boolean
  synced_at?: boolean
  created_at?: boolean
  updated_at?: boolean
}, ExtArgs["result"]["mt5_groups"]>

export type mt5_groupsSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  group_id?: boolean
  name?: boolean
  description?: boolean
  synced_at?: boolean
  created_at?: boolean
  updated_at?: boolean
}, ExtArgs["result"]["mt5_groups"]>

export type mt5_groupsSelectScalar = {
  id?: boolean
  group_id?: boolean
  name?: boolean
  description?: boolean
  synced_at?: boolean
  created_at?: boolean
  updated_at?: boolean
}

export type mt5_groupsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "group_id" | "name" | "description" | "synced_at" | "created_at" | "updated_at", ExtArgs["result"]["mt5_groups"]>

export type $mt5_groupsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "mt5_groups"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    group_id: string
    name: string
    description: string | null
    synced_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }, ExtArgs["result"]["mt5_groups"]>
  composites: {}
}

export type mt5_groupsGetPayload<S extends boolean | null | undefined | mt5_groupsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$mt5_groupsPayload, S>

export type mt5_groupsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<mt5_groupsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Mt5_groupsCountAggregateInputType | true
  }

export interface mt5_groupsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['mt5_groups'], meta: { name: 'mt5_groups' } }
  /**
   * Find zero or one Mt5_groups that matches the filter.
   * @param {mt5_groupsFindUniqueArgs} args - Arguments to find a Mt5_groups
   * @example
   * // Get one Mt5_groups
   * const mt5_groups = await prisma.mt5_groups.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends mt5_groupsFindUniqueArgs>(args: Prisma.SelectSubset<T, mt5_groupsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__mt5_groupsClient<runtime.Types.Result.GetResult<Prisma.$mt5_groupsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Mt5_groups that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {mt5_groupsFindUniqueOrThrowArgs} args - Arguments to find a Mt5_groups
   * @example
   * // Get one Mt5_groups
   * const mt5_groups = await prisma.mt5_groups.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends mt5_groupsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, mt5_groupsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__mt5_groupsClient<runtime.Types.Result.GetResult<Prisma.$mt5_groupsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Mt5_groups that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {mt5_groupsFindFirstArgs} args - Arguments to find a Mt5_groups
   * @example
   * // Get one Mt5_groups
   * const mt5_groups = await prisma.mt5_groups.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends mt5_groupsFindFirstArgs>(args?: Prisma.SelectSubset<T, mt5_groupsFindFirstArgs<ExtArgs>>): Prisma.Prisma__mt5_groupsClient<runtime.Types.Result.GetResult<Prisma.$mt5_groupsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Mt5_groups that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {mt5_groupsFindFirstOrThrowArgs} args - Arguments to find a Mt5_groups
   * @example
   * // Get one Mt5_groups
   * const mt5_groups = await prisma.mt5_groups.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends mt5_groupsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, mt5_groupsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__mt5_groupsClient<runtime.Types.Result.GetResult<Prisma.$mt5_groupsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Mt5_groups that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {mt5_groupsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Mt5_groups
   * const mt5_groups = await prisma.mt5_groups.findMany()
   * 
   * // Get first 10 Mt5_groups
   * const mt5_groups = await prisma.mt5_groups.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const mt5_groupsWithIdOnly = await prisma.mt5_groups.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends mt5_groupsFindManyArgs>(args?: Prisma.SelectSubset<T, mt5_groupsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$mt5_groupsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Mt5_groups.
   * @param {mt5_groupsCreateArgs} args - Arguments to create a Mt5_groups.
   * @example
   * // Create one Mt5_groups
   * const Mt5_groups = await prisma.mt5_groups.create({
   *   data: {
   *     // ... data to create a Mt5_groups
   *   }
   * })
   * 
   */
  create<T extends mt5_groupsCreateArgs>(args: Prisma.SelectSubset<T, mt5_groupsCreateArgs<ExtArgs>>): Prisma.Prisma__mt5_groupsClient<runtime.Types.Result.GetResult<Prisma.$mt5_groupsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Mt5_groups.
   * @param {mt5_groupsCreateManyArgs} args - Arguments to create many Mt5_groups.
   * @example
   * // Create many Mt5_groups
   * const mt5_groups = await prisma.mt5_groups.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends mt5_groupsCreateManyArgs>(args?: Prisma.SelectSubset<T, mt5_groupsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Mt5_groups and returns the data saved in the database.
   * @param {mt5_groupsCreateManyAndReturnArgs} args - Arguments to create many Mt5_groups.
   * @example
   * // Create many Mt5_groups
   * const mt5_groups = await prisma.mt5_groups.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Mt5_groups and only return the `id`
   * const mt5_groupsWithIdOnly = await prisma.mt5_groups.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends mt5_groupsCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, mt5_groupsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$mt5_groupsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Mt5_groups.
   * @param {mt5_groupsDeleteArgs} args - Arguments to delete one Mt5_groups.
   * @example
   * // Delete one Mt5_groups
   * const Mt5_groups = await prisma.mt5_groups.delete({
   *   where: {
   *     // ... filter to delete one Mt5_groups
   *   }
   * })
   * 
   */
  delete<T extends mt5_groupsDeleteArgs>(args: Prisma.SelectSubset<T, mt5_groupsDeleteArgs<ExtArgs>>): Prisma.Prisma__mt5_groupsClient<runtime.Types.Result.GetResult<Prisma.$mt5_groupsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Mt5_groups.
   * @param {mt5_groupsUpdateArgs} args - Arguments to update one Mt5_groups.
   * @example
   * // Update one Mt5_groups
   * const mt5_groups = await prisma.mt5_groups.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends mt5_groupsUpdateArgs>(args: Prisma.SelectSubset<T, mt5_groupsUpdateArgs<ExtArgs>>): Prisma.Prisma__mt5_groupsClient<runtime.Types.Result.GetResult<Prisma.$mt5_groupsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Mt5_groups.
   * @param {mt5_groupsDeleteManyArgs} args - Arguments to filter Mt5_groups to delete.
   * @example
   * // Delete a few Mt5_groups
   * const { count } = await prisma.mt5_groups.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends mt5_groupsDeleteManyArgs>(args?: Prisma.SelectSubset<T, mt5_groupsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Mt5_groups.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {mt5_groupsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Mt5_groups
   * const mt5_groups = await prisma.mt5_groups.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends mt5_groupsUpdateManyArgs>(args: Prisma.SelectSubset<T, mt5_groupsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Mt5_groups and returns the data updated in the database.
   * @param {mt5_groupsUpdateManyAndReturnArgs} args - Arguments to update many Mt5_groups.
   * @example
   * // Update many Mt5_groups
   * const mt5_groups = await prisma.mt5_groups.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Mt5_groups and only return the `id`
   * const mt5_groupsWithIdOnly = await prisma.mt5_groups.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends mt5_groupsUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, mt5_groupsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$mt5_groupsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Mt5_groups.
   * @param {mt5_groupsUpsertArgs} args - Arguments to update or create a Mt5_groups.
   * @example
   * // Update or create a Mt5_groups
   * const mt5_groups = await prisma.mt5_groups.upsert({
   *   create: {
   *     // ... data to create a Mt5_groups
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Mt5_groups we want to update
   *   }
   * })
   */
  upsert<T extends mt5_groupsUpsertArgs>(args: Prisma.SelectSubset<T, mt5_groupsUpsertArgs<ExtArgs>>): Prisma.Prisma__mt5_groupsClient<runtime.Types.Result.GetResult<Prisma.$mt5_groupsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Mt5_groups.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {mt5_groupsCountArgs} args - Arguments to filter Mt5_groups to count.
   * @example
   * // Count the number of Mt5_groups
   * const count = await prisma.mt5_groups.count({
   *   where: {
   *     // ... the filter for the Mt5_groups we want to count
   *   }
   * })
  **/
  count<T extends mt5_groupsCountArgs>(
    args?: Prisma.Subset<T, mt5_groupsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Mt5_groupsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Mt5_groups.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Mt5_groupsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Mt5_groupsAggregateArgs>(args: Prisma.Subset<T, Mt5_groupsAggregateArgs>): Prisma.PrismaPromise<GetMt5_groupsAggregateType<T>>

  /**
   * Group by Mt5_groups.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {mt5_groupsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends mt5_groupsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: mt5_groupsGroupByArgs['orderBy'] }
      : { orderBy?: mt5_groupsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, mt5_groupsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMt5_groupsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the mt5_groups model
 */
readonly fields: mt5_groupsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for mt5_groups.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__mt5_groupsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the mt5_groups model
 */
export interface mt5_groupsFieldRefs {
  readonly id: Prisma.FieldRef<"mt5_groups", 'Int'>
  readonly group_id: Prisma.FieldRef<"mt5_groups", 'String'>
  readonly name: Prisma.FieldRef<"mt5_groups", 'String'>
  readonly description: Prisma.FieldRef<"mt5_groups", 'String'>
  readonly synced_at: Prisma.FieldRef<"mt5_groups", 'DateTime'>
  readonly created_at: Prisma.FieldRef<"mt5_groups", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"mt5_groups", 'DateTime'>
}
    

// Custom InputTypes
/**
 * mt5_groups findUnique
 */
export type mt5_groupsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the mt5_groups
   */
  select?: Prisma.mt5_groupsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the mt5_groups
   */
  omit?: Prisma.mt5_groupsOmit<ExtArgs> | null
  /**
   * Filter, which mt5_groups to fetch.
   */
  where: Prisma.mt5_groupsWhereUniqueInput
}

/**
 * mt5_groups findUniqueOrThrow
 */
export type mt5_groupsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the mt5_groups
   */
  select?: Prisma.mt5_groupsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the mt5_groups
   */
  omit?: Prisma.mt5_groupsOmit<ExtArgs> | null
  /**
   * Filter, which mt5_groups to fetch.
   */
  where: Prisma.mt5_groupsWhereUniqueInput
}

/**
 * mt5_groups findFirst
 */
export type mt5_groupsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the mt5_groups
   */
  select?: Prisma.mt5_groupsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the mt5_groups
   */
  omit?: Prisma.mt5_groupsOmit<ExtArgs> | null
  /**
   * Filter, which mt5_groups to fetch.
   */
  where?: Prisma.mt5_groupsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of mt5_groups to fetch.
   */
  orderBy?: Prisma.mt5_groupsOrderByWithRelationInput | Prisma.mt5_groupsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for mt5_groups.
   */
  cursor?: Prisma.mt5_groupsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` mt5_groups from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` mt5_groups.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of mt5_groups.
   */
  distinct?: Prisma.Mt5_groupsScalarFieldEnum | Prisma.Mt5_groupsScalarFieldEnum[]
}

/**
 * mt5_groups findFirstOrThrow
 */
export type mt5_groupsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the mt5_groups
   */
  select?: Prisma.mt5_groupsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the mt5_groups
   */
  omit?: Prisma.mt5_groupsOmit<ExtArgs> | null
  /**
   * Filter, which mt5_groups to fetch.
   */
  where?: Prisma.mt5_groupsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of mt5_groups to fetch.
   */
  orderBy?: Prisma.mt5_groupsOrderByWithRelationInput | Prisma.mt5_groupsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for mt5_groups.
   */
  cursor?: Prisma.mt5_groupsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` mt5_groups from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` mt5_groups.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of mt5_groups.
   */
  distinct?: Prisma.Mt5_groupsScalarFieldEnum | Prisma.Mt5_groupsScalarFieldEnum[]
}

/**
 * mt5_groups findMany
 */
export type mt5_groupsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the mt5_groups
   */
  select?: Prisma.mt5_groupsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the mt5_groups
   */
  omit?: Prisma.mt5_groupsOmit<ExtArgs> | null
  /**
   * Filter, which mt5_groups to fetch.
   */
  where?: Prisma.mt5_groupsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of mt5_groups to fetch.
   */
  orderBy?: Prisma.mt5_groupsOrderByWithRelationInput | Prisma.mt5_groupsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing mt5_groups.
   */
  cursor?: Prisma.mt5_groupsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` mt5_groups from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` mt5_groups.
   */
  skip?: number
  distinct?: Prisma.Mt5_groupsScalarFieldEnum | Prisma.Mt5_groupsScalarFieldEnum[]
}

/**
 * mt5_groups create
 */
export type mt5_groupsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the mt5_groups
   */
  select?: Prisma.mt5_groupsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the mt5_groups
   */
  omit?: Prisma.mt5_groupsOmit<ExtArgs> | null
  /**
   * The data needed to create a mt5_groups.
   */
  data: Prisma.XOR<Prisma.mt5_groupsCreateInput, Prisma.mt5_groupsUncheckedCreateInput>
}

/**
 * mt5_groups createMany
 */
export type mt5_groupsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many mt5_groups.
   */
  data: Prisma.mt5_groupsCreateManyInput | Prisma.mt5_groupsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * mt5_groups createManyAndReturn
 */
export type mt5_groupsCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the mt5_groups
   */
  select?: Prisma.mt5_groupsSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the mt5_groups
   */
  omit?: Prisma.mt5_groupsOmit<ExtArgs> | null
  /**
   * The data used to create many mt5_groups.
   */
  data: Prisma.mt5_groupsCreateManyInput | Prisma.mt5_groupsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * mt5_groups update
 */
export type mt5_groupsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the mt5_groups
   */
  select?: Prisma.mt5_groupsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the mt5_groups
   */
  omit?: Prisma.mt5_groupsOmit<ExtArgs> | null
  /**
   * The data needed to update a mt5_groups.
   */
  data: Prisma.XOR<Prisma.mt5_groupsUpdateInput, Prisma.mt5_groupsUncheckedUpdateInput>
  /**
   * Choose, which mt5_groups to update.
   */
  where: Prisma.mt5_groupsWhereUniqueInput
}

/**
 * mt5_groups updateMany
 */
export type mt5_groupsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update mt5_groups.
   */
  data: Prisma.XOR<Prisma.mt5_groupsUpdateManyMutationInput, Prisma.mt5_groupsUncheckedUpdateManyInput>
  /**
   * Filter which mt5_groups to update
   */
  where?: Prisma.mt5_groupsWhereInput
  /**
   * Limit how many mt5_groups to update.
   */
  limit?: number
}

/**
 * mt5_groups updateManyAndReturn
 */
export type mt5_groupsUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the mt5_groups
   */
  select?: Prisma.mt5_groupsSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the mt5_groups
   */
  omit?: Prisma.mt5_groupsOmit<ExtArgs> | null
  /**
   * The data used to update mt5_groups.
   */
  data: Prisma.XOR<Prisma.mt5_groupsUpdateManyMutationInput, Prisma.mt5_groupsUncheckedUpdateManyInput>
  /**
   * Filter which mt5_groups to update
   */
  where?: Prisma.mt5_groupsWhereInput
  /**
   * Limit how many mt5_groups to update.
   */
  limit?: number
}

/**
 * mt5_groups upsert
 */
export type mt5_groupsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the mt5_groups
   */
  select?: Prisma.mt5_groupsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the mt5_groups
   */
  omit?: Prisma.mt5_groupsOmit<ExtArgs> | null
  /**
   * The filter to search for the mt5_groups to update in case it exists.
   */
  where: Prisma.mt5_groupsWhereUniqueInput
  /**
   * In case the mt5_groups found by the `where` argument doesn't exist, create a new mt5_groups with this data.
   */
  create: Prisma.XOR<Prisma.mt5_groupsCreateInput, Prisma.mt5_groupsUncheckedCreateInput>
  /**
   * In case the mt5_groups was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.mt5_groupsUpdateInput, Prisma.mt5_groupsUncheckedUpdateInput>
}

/**
 * mt5_groups delete
 */
export type mt5_groupsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the mt5_groups
   */
  select?: Prisma.mt5_groupsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the mt5_groups
   */
  omit?: Prisma.mt5_groupsOmit<ExtArgs> | null
  /**
   * Filter which mt5_groups to delete.
   */
  where: Prisma.mt5_groupsWhereUniqueInput
}

/**
 * mt5_groups deleteMany
 */
export type mt5_groupsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which mt5_groups to delete
   */
  where?: Prisma.mt5_groupsWhereInput
  /**
   * Limit how many mt5_groups to delete.
   */
  limit?: number
}

/**
 * mt5_groups without action
 */
export type mt5_groupsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the mt5_groups
   */
  select?: Prisma.mt5_groupsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the mt5_groups
   */
  omit?: Prisma.mt5_groupsOmit<ExtArgs> | null
}
