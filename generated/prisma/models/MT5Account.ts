
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `MT5Account` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model MT5Account
 * 
 */
export type MT5AccountModel = runtime.Types.Result.DefaultSelection<Prisma.$MT5AccountPayload>

export type AggregateMT5Account = {
  _count: MT5AccountCountAggregateOutputType | null
  _min: MT5AccountMinAggregateOutputType | null
  _max: MT5AccountMaxAggregateOutputType | null
}

export type MT5AccountMinAggregateOutputType = {
  id: string | null
  accountId: string | null
  userId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type MT5AccountMaxAggregateOutputType = {
  id: string | null
  accountId: string | null
  userId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type MT5AccountCountAggregateOutputType = {
  id: number
  accountId: number
  userId: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type MT5AccountMinAggregateInputType = {
  id?: true
  accountId?: true
  userId?: true
  createdAt?: true
  updatedAt?: true
}

export type MT5AccountMaxAggregateInputType = {
  id?: true
  accountId?: true
  userId?: true
  createdAt?: true
  updatedAt?: true
}

export type MT5AccountCountAggregateInputType = {
  id?: true
  accountId?: true
  userId?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type MT5AccountAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which MT5Account to aggregate.
   */
  where?: Prisma.MT5AccountWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MT5Accounts to fetch.
   */
  orderBy?: Prisma.MT5AccountOrderByWithRelationInput | Prisma.MT5AccountOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.MT5AccountWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MT5Accounts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MT5Accounts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned MT5Accounts
  **/
  _count?: true | MT5AccountCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: MT5AccountMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: MT5AccountMaxAggregateInputType
}

export type GetMT5AccountAggregateType<T extends MT5AccountAggregateArgs> = {
      [P in keyof T & keyof AggregateMT5Account]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateMT5Account[P]>
    : Prisma.GetScalarType<T[P], AggregateMT5Account[P]>
}




export type MT5AccountGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MT5AccountWhereInput
  orderBy?: Prisma.MT5AccountOrderByWithAggregationInput | Prisma.MT5AccountOrderByWithAggregationInput[]
  by: Prisma.MT5AccountScalarFieldEnum[] | Prisma.MT5AccountScalarFieldEnum
  having?: Prisma.MT5AccountScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: MT5AccountCountAggregateInputType | true
  _min?: MT5AccountMinAggregateInputType
  _max?: MT5AccountMaxAggregateInputType
}

export type MT5AccountGroupByOutputType = {
  id: string
  accountId: string
  userId: string
  createdAt: Date
  updatedAt: Date
  _count: MT5AccountCountAggregateOutputType | null
  _min: MT5AccountMinAggregateOutputType | null
  _max: MT5AccountMaxAggregateOutputType | null
}

type GetMT5AccountGroupByPayload<T extends MT5AccountGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<MT5AccountGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof MT5AccountGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], MT5AccountGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], MT5AccountGroupByOutputType[P]>
      }
    >
  >



export type MT5AccountWhereInput = {
  AND?: Prisma.MT5AccountWhereInput | Prisma.MT5AccountWhereInput[]
  OR?: Prisma.MT5AccountWhereInput[]
  NOT?: Prisma.MT5AccountWhereInput | Prisma.MT5AccountWhereInput[]
  id?: Prisma.StringFilter<"MT5Account"> | string
  accountId?: Prisma.StringFilter<"MT5Account"> | string
  userId?: Prisma.StringFilter<"MT5Account"> | string
  createdAt?: Prisma.DateTimeFilter<"MT5Account"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"MT5Account"> | Date | string
  User?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  MT5Transaction?: Prisma.MT5TransactionListRelationFilter
}

export type MT5AccountOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  accountId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  User?: Prisma.UserOrderByWithRelationInput
  MT5Transaction?: Prisma.MT5TransactionOrderByRelationAggregateInput
}

export type MT5AccountWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  accountId?: string
  AND?: Prisma.MT5AccountWhereInput | Prisma.MT5AccountWhereInput[]
  OR?: Prisma.MT5AccountWhereInput[]
  NOT?: Prisma.MT5AccountWhereInput | Prisma.MT5AccountWhereInput[]
  userId?: Prisma.StringFilter<"MT5Account"> | string
  createdAt?: Prisma.DateTimeFilter<"MT5Account"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"MT5Account"> | Date | string
  User?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  MT5Transaction?: Prisma.MT5TransactionListRelationFilter
}, "id" | "accountId">

export type MT5AccountOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  accountId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.MT5AccountCountOrderByAggregateInput
  _max?: Prisma.MT5AccountMaxOrderByAggregateInput
  _min?: Prisma.MT5AccountMinOrderByAggregateInput
}

export type MT5AccountScalarWhereWithAggregatesInput = {
  AND?: Prisma.MT5AccountScalarWhereWithAggregatesInput | Prisma.MT5AccountScalarWhereWithAggregatesInput[]
  OR?: Prisma.MT5AccountScalarWhereWithAggregatesInput[]
  NOT?: Prisma.MT5AccountScalarWhereWithAggregatesInput | Prisma.MT5AccountScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"MT5Account"> | string
  accountId?: Prisma.StringWithAggregatesFilter<"MT5Account"> | string
  userId?: Prisma.StringWithAggregatesFilter<"MT5Account"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"MT5Account"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"MT5Account"> | Date | string
}

export type MT5AccountCreateInput = {
  id: string
  accountId: string
  createdAt?: Date | string
  updatedAt: Date | string
  User: Prisma.UserCreateNestedOneWithoutMT5AccountInput
  MT5Transaction?: Prisma.MT5TransactionCreateNestedManyWithoutMT5AccountInput
}

export type MT5AccountUncheckedCreateInput = {
  id: string
  accountId: string
  userId: string
  createdAt?: Date | string
  updatedAt: Date | string
  MT5Transaction?: Prisma.MT5TransactionUncheckedCreateNestedManyWithoutMT5AccountInput
}

export type MT5AccountUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  accountId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  User?: Prisma.UserUpdateOneRequiredWithoutMT5AccountNestedInput
  MT5Transaction?: Prisma.MT5TransactionUpdateManyWithoutMT5AccountNestedInput
}

export type MT5AccountUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  accountId?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  MT5Transaction?: Prisma.MT5TransactionUncheckedUpdateManyWithoutMT5AccountNestedInput
}

export type MT5AccountCreateManyInput = {
  id: string
  accountId: string
  userId: string
  createdAt?: Date | string
  updatedAt: Date | string
}

export type MT5AccountUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  accountId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MT5AccountUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  accountId?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MT5AccountCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  accountId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MT5AccountMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  accountId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MT5AccountMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  accountId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MT5AccountScalarRelationFilter = {
  is?: Prisma.MT5AccountWhereInput
  isNot?: Prisma.MT5AccountWhereInput
}

export type MT5AccountListRelationFilter = {
  every?: Prisma.MT5AccountWhereInput
  some?: Prisma.MT5AccountWhereInput
  none?: Prisma.MT5AccountWhereInput
}

export type MT5AccountOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type MT5AccountCreateNestedOneWithoutMT5TransactionInput = {
  create?: Prisma.XOR<Prisma.MT5AccountCreateWithoutMT5TransactionInput, Prisma.MT5AccountUncheckedCreateWithoutMT5TransactionInput>
  connectOrCreate?: Prisma.MT5AccountCreateOrConnectWithoutMT5TransactionInput
  connect?: Prisma.MT5AccountWhereUniqueInput
}

export type MT5AccountUpdateOneRequiredWithoutMT5TransactionNestedInput = {
  create?: Prisma.XOR<Prisma.MT5AccountCreateWithoutMT5TransactionInput, Prisma.MT5AccountUncheckedCreateWithoutMT5TransactionInput>
  connectOrCreate?: Prisma.MT5AccountCreateOrConnectWithoutMT5TransactionInput
  upsert?: Prisma.MT5AccountUpsertWithoutMT5TransactionInput
  connect?: Prisma.MT5AccountWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.MT5AccountUpdateToOneWithWhereWithoutMT5TransactionInput, Prisma.MT5AccountUpdateWithoutMT5TransactionInput>, Prisma.MT5AccountUncheckedUpdateWithoutMT5TransactionInput>
}

export type MT5AccountCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.MT5AccountCreateWithoutUserInput, Prisma.MT5AccountUncheckedCreateWithoutUserInput> | Prisma.MT5AccountCreateWithoutUserInput[] | Prisma.MT5AccountUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.MT5AccountCreateOrConnectWithoutUserInput | Prisma.MT5AccountCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.MT5AccountCreateManyUserInputEnvelope
  connect?: Prisma.MT5AccountWhereUniqueInput | Prisma.MT5AccountWhereUniqueInput[]
}

export type MT5AccountUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.MT5AccountCreateWithoutUserInput, Prisma.MT5AccountUncheckedCreateWithoutUserInput> | Prisma.MT5AccountCreateWithoutUserInput[] | Prisma.MT5AccountUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.MT5AccountCreateOrConnectWithoutUserInput | Prisma.MT5AccountCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.MT5AccountCreateManyUserInputEnvelope
  connect?: Prisma.MT5AccountWhereUniqueInput | Prisma.MT5AccountWhereUniqueInput[]
}

export type MT5AccountUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.MT5AccountCreateWithoutUserInput, Prisma.MT5AccountUncheckedCreateWithoutUserInput> | Prisma.MT5AccountCreateWithoutUserInput[] | Prisma.MT5AccountUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.MT5AccountCreateOrConnectWithoutUserInput | Prisma.MT5AccountCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.MT5AccountUpsertWithWhereUniqueWithoutUserInput | Prisma.MT5AccountUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.MT5AccountCreateManyUserInputEnvelope
  set?: Prisma.MT5AccountWhereUniqueInput | Prisma.MT5AccountWhereUniqueInput[]
  disconnect?: Prisma.MT5AccountWhereUniqueInput | Prisma.MT5AccountWhereUniqueInput[]
  delete?: Prisma.MT5AccountWhereUniqueInput | Prisma.MT5AccountWhereUniqueInput[]
  connect?: Prisma.MT5AccountWhereUniqueInput | Prisma.MT5AccountWhereUniqueInput[]
  update?: Prisma.MT5AccountUpdateWithWhereUniqueWithoutUserInput | Prisma.MT5AccountUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.MT5AccountUpdateManyWithWhereWithoutUserInput | Prisma.MT5AccountUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.MT5AccountScalarWhereInput | Prisma.MT5AccountScalarWhereInput[]
}

export type MT5AccountUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.MT5AccountCreateWithoutUserInput, Prisma.MT5AccountUncheckedCreateWithoutUserInput> | Prisma.MT5AccountCreateWithoutUserInput[] | Prisma.MT5AccountUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.MT5AccountCreateOrConnectWithoutUserInput | Prisma.MT5AccountCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.MT5AccountUpsertWithWhereUniqueWithoutUserInput | Prisma.MT5AccountUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.MT5AccountCreateManyUserInputEnvelope
  set?: Prisma.MT5AccountWhereUniqueInput | Prisma.MT5AccountWhereUniqueInput[]
  disconnect?: Prisma.MT5AccountWhereUniqueInput | Prisma.MT5AccountWhereUniqueInput[]
  delete?: Prisma.MT5AccountWhereUniqueInput | Prisma.MT5AccountWhereUniqueInput[]
  connect?: Prisma.MT5AccountWhereUniqueInput | Prisma.MT5AccountWhereUniqueInput[]
  update?: Prisma.MT5AccountUpdateWithWhereUniqueWithoutUserInput | Prisma.MT5AccountUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.MT5AccountUpdateManyWithWhereWithoutUserInput | Prisma.MT5AccountUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.MT5AccountScalarWhereInput | Prisma.MT5AccountScalarWhereInput[]
}

export type MT5AccountCreateWithoutMT5TransactionInput = {
  id: string
  accountId: string
  createdAt?: Date | string
  updatedAt: Date | string
  User: Prisma.UserCreateNestedOneWithoutMT5AccountInput
}

export type MT5AccountUncheckedCreateWithoutMT5TransactionInput = {
  id: string
  accountId: string
  userId: string
  createdAt?: Date | string
  updatedAt: Date | string
}

export type MT5AccountCreateOrConnectWithoutMT5TransactionInput = {
  where: Prisma.MT5AccountWhereUniqueInput
  create: Prisma.XOR<Prisma.MT5AccountCreateWithoutMT5TransactionInput, Prisma.MT5AccountUncheckedCreateWithoutMT5TransactionInput>
}

export type MT5AccountUpsertWithoutMT5TransactionInput = {
  update: Prisma.XOR<Prisma.MT5AccountUpdateWithoutMT5TransactionInput, Prisma.MT5AccountUncheckedUpdateWithoutMT5TransactionInput>
  create: Prisma.XOR<Prisma.MT5AccountCreateWithoutMT5TransactionInput, Prisma.MT5AccountUncheckedCreateWithoutMT5TransactionInput>
  where?: Prisma.MT5AccountWhereInput
}

export type MT5AccountUpdateToOneWithWhereWithoutMT5TransactionInput = {
  where?: Prisma.MT5AccountWhereInput
  data: Prisma.XOR<Prisma.MT5AccountUpdateWithoutMT5TransactionInput, Prisma.MT5AccountUncheckedUpdateWithoutMT5TransactionInput>
}

export type MT5AccountUpdateWithoutMT5TransactionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  accountId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  User?: Prisma.UserUpdateOneRequiredWithoutMT5AccountNestedInput
}

export type MT5AccountUncheckedUpdateWithoutMT5TransactionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  accountId?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MT5AccountCreateWithoutUserInput = {
  id: string
  accountId: string
  createdAt?: Date | string
  updatedAt: Date | string
  MT5Transaction?: Prisma.MT5TransactionCreateNestedManyWithoutMT5AccountInput
}

export type MT5AccountUncheckedCreateWithoutUserInput = {
  id: string
  accountId: string
  createdAt?: Date | string
  updatedAt: Date | string
  MT5Transaction?: Prisma.MT5TransactionUncheckedCreateNestedManyWithoutMT5AccountInput
}

export type MT5AccountCreateOrConnectWithoutUserInput = {
  where: Prisma.MT5AccountWhereUniqueInput
  create: Prisma.XOR<Prisma.MT5AccountCreateWithoutUserInput, Prisma.MT5AccountUncheckedCreateWithoutUserInput>
}

export type MT5AccountCreateManyUserInputEnvelope = {
  data: Prisma.MT5AccountCreateManyUserInput | Prisma.MT5AccountCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type MT5AccountUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.MT5AccountWhereUniqueInput
  update: Prisma.XOR<Prisma.MT5AccountUpdateWithoutUserInput, Prisma.MT5AccountUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.MT5AccountCreateWithoutUserInput, Prisma.MT5AccountUncheckedCreateWithoutUserInput>
}

export type MT5AccountUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.MT5AccountWhereUniqueInput
  data: Prisma.XOR<Prisma.MT5AccountUpdateWithoutUserInput, Prisma.MT5AccountUncheckedUpdateWithoutUserInput>
}

export type MT5AccountUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.MT5AccountScalarWhereInput
  data: Prisma.XOR<Prisma.MT5AccountUpdateManyMutationInput, Prisma.MT5AccountUncheckedUpdateManyWithoutUserInput>
}

export type MT5AccountScalarWhereInput = {
  AND?: Prisma.MT5AccountScalarWhereInput | Prisma.MT5AccountScalarWhereInput[]
  OR?: Prisma.MT5AccountScalarWhereInput[]
  NOT?: Prisma.MT5AccountScalarWhereInput | Prisma.MT5AccountScalarWhereInput[]
  id?: Prisma.StringFilter<"MT5Account"> | string
  accountId?: Prisma.StringFilter<"MT5Account"> | string
  userId?: Prisma.StringFilter<"MT5Account"> | string
  createdAt?: Prisma.DateTimeFilter<"MT5Account"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"MT5Account"> | Date | string
}

export type MT5AccountCreateManyUserInput = {
  id: string
  accountId: string
  createdAt?: Date | string
  updatedAt: Date | string
}

export type MT5AccountUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  accountId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  MT5Transaction?: Prisma.MT5TransactionUpdateManyWithoutMT5AccountNestedInput
}

export type MT5AccountUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  accountId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  MT5Transaction?: Prisma.MT5TransactionUncheckedUpdateManyWithoutMT5AccountNestedInput
}

export type MT5AccountUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  accountId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type MT5AccountCountOutputType
 */

export type MT5AccountCountOutputType = {
  MT5Transaction: number
}

export type MT5AccountCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  MT5Transaction?: boolean | MT5AccountCountOutputTypeCountMT5TransactionArgs
}

/**
 * MT5AccountCountOutputType without action
 */
export type MT5AccountCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5AccountCountOutputType
   */
  select?: Prisma.MT5AccountCountOutputTypeSelect<ExtArgs> | null
}

/**
 * MT5AccountCountOutputType without action
 */
export type MT5AccountCountOutputTypeCountMT5TransactionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MT5TransactionWhereInput
}


export type MT5AccountSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  accountId?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  User?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  MT5Transaction?: boolean | Prisma.MT5Account$MT5TransactionArgs<ExtArgs>
  _count?: boolean | Prisma.MT5AccountCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["mT5Account"]>

export type MT5AccountSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  accountId?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  User?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["mT5Account"]>

export type MT5AccountSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  accountId?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  User?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["mT5Account"]>

export type MT5AccountSelectScalar = {
  id?: boolean
  accountId?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type MT5AccountOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "accountId" | "userId" | "createdAt" | "updatedAt", ExtArgs["result"]["mT5Account"]>
export type MT5AccountInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  User?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  MT5Transaction?: boolean | Prisma.MT5Account$MT5TransactionArgs<ExtArgs>
  _count?: boolean | Prisma.MT5AccountCountOutputTypeDefaultArgs<ExtArgs>
}
export type MT5AccountIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  User?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type MT5AccountIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  User?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $MT5AccountPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "MT5Account"
  objects: {
    User: Prisma.$UserPayload<ExtArgs>
    MT5Transaction: Prisma.$MT5TransactionPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    accountId: string
    userId: string
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["mT5Account"]>
  composites: {}
}

export type MT5AccountGetPayload<S extends boolean | null | undefined | MT5AccountDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$MT5AccountPayload, S>

export type MT5AccountCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<MT5AccountFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: MT5AccountCountAggregateInputType | true
  }

export interface MT5AccountDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MT5Account'], meta: { name: 'MT5Account' } }
  /**
   * Find zero or one MT5Account that matches the filter.
   * @param {MT5AccountFindUniqueArgs} args - Arguments to find a MT5Account
   * @example
   * // Get one MT5Account
   * const mT5Account = await prisma.mT5Account.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends MT5AccountFindUniqueArgs>(args: Prisma.SelectSubset<T, MT5AccountFindUniqueArgs<ExtArgs>>): Prisma.Prisma__MT5AccountClient<runtime.Types.Result.GetResult<Prisma.$MT5AccountPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one MT5Account that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {MT5AccountFindUniqueOrThrowArgs} args - Arguments to find a MT5Account
   * @example
   * // Get one MT5Account
   * const mT5Account = await prisma.mT5Account.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends MT5AccountFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, MT5AccountFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__MT5AccountClient<runtime.Types.Result.GetResult<Prisma.$MT5AccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first MT5Account that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MT5AccountFindFirstArgs} args - Arguments to find a MT5Account
   * @example
   * // Get one MT5Account
   * const mT5Account = await prisma.mT5Account.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends MT5AccountFindFirstArgs>(args?: Prisma.SelectSubset<T, MT5AccountFindFirstArgs<ExtArgs>>): Prisma.Prisma__MT5AccountClient<runtime.Types.Result.GetResult<Prisma.$MT5AccountPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first MT5Account that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MT5AccountFindFirstOrThrowArgs} args - Arguments to find a MT5Account
   * @example
   * // Get one MT5Account
   * const mT5Account = await prisma.mT5Account.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends MT5AccountFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, MT5AccountFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__MT5AccountClient<runtime.Types.Result.GetResult<Prisma.$MT5AccountPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more MT5Accounts that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MT5AccountFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all MT5Accounts
   * const mT5Accounts = await prisma.mT5Account.findMany()
   * 
   * // Get first 10 MT5Accounts
   * const mT5Accounts = await prisma.mT5Account.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const mT5AccountWithIdOnly = await prisma.mT5Account.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends MT5AccountFindManyArgs>(args?: Prisma.SelectSubset<T, MT5AccountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MT5AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a MT5Account.
   * @param {MT5AccountCreateArgs} args - Arguments to create a MT5Account.
   * @example
   * // Create one MT5Account
   * const MT5Account = await prisma.mT5Account.create({
   *   data: {
   *     // ... data to create a MT5Account
   *   }
   * })
   * 
   */
  create<T extends MT5AccountCreateArgs>(args: Prisma.SelectSubset<T, MT5AccountCreateArgs<ExtArgs>>): Prisma.Prisma__MT5AccountClient<runtime.Types.Result.GetResult<Prisma.$MT5AccountPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many MT5Accounts.
   * @param {MT5AccountCreateManyArgs} args - Arguments to create many MT5Accounts.
   * @example
   * // Create many MT5Accounts
   * const mT5Account = await prisma.mT5Account.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends MT5AccountCreateManyArgs>(args?: Prisma.SelectSubset<T, MT5AccountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many MT5Accounts and returns the data saved in the database.
   * @param {MT5AccountCreateManyAndReturnArgs} args - Arguments to create many MT5Accounts.
   * @example
   * // Create many MT5Accounts
   * const mT5Account = await prisma.mT5Account.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many MT5Accounts and only return the `id`
   * const mT5AccountWithIdOnly = await prisma.mT5Account.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends MT5AccountCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, MT5AccountCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MT5AccountPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a MT5Account.
   * @param {MT5AccountDeleteArgs} args - Arguments to delete one MT5Account.
   * @example
   * // Delete one MT5Account
   * const MT5Account = await prisma.mT5Account.delete({
   *   where: {
   *     // ... filter to delete one MT5Account
   *   }
   * })
   * 
   */
  delete<T extends MT5AccountDeleteArgs>(args: Prisma.SelectSubset<T, MT5AccountDeleteArgs<ExtArgs>>): Prisma.Prisma__MT5AccountClient<runtime.Types.Result.GetResult<Prisma.$MT5AccountPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one MT5Account.
   * @param {MT5AccountUpdateArgs} args - Arguments to update one MT5Account.
   * @example
   * // Update one MT5Account
   * const mT5Account = await prisma.mT5Account.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends MT5AccountUpdateArgs>(args: Prisma.SelectSubset<T, MT5AccountUpdateArgs<ExtArgs>>): Prisma.Prisma__MT5AccountClient<runtime.Types.Result.GetResult<Prisma.$MT5AccountPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more MT5Accounts.
   * @param {MT5AccountDeleteManyArgs} args - Arguments to filter MT5Accounts to delete.
   * @example
   * // Delete a few MT5Accounts
   * const { count } = await prisma.mT5Account.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends MT5AccountDeleteManyArgs>(args?: Prisma.SelectSubset<T, MT5AccountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more MT5Accounts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MT5AccountUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many MT5Accounts
   * const mT5Account = await prisma.mT5Account.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends MT5AccountUpdateManyArgs>(args: Prisma.SelectSubset<T, MT5AccountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more MT5Accounts and returns the data updated in the database.
   * @param {MT5AccountUpdateManyAndReturnArgs} args - Arguments to update many MT5Accounts.
   * @example
   * // Update many MT5Accounts
   * const mT5Account = await prisma.mT5Account.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more MT5Accounts and only return the `id`
   * const mT5AccountWithIdOnly = await prisma.mT5Account.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends MT5AccountUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, MT5AccountUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MT5AccountPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one MT5Account.
   * @param {MT5AccountUpsertArgs} args - Arguments to update or create a MT5Account.
   * @example
   * // Update or create a MT5Account
   * const mT5Account = await prisma.mT5Account.upsert({
   *   create: {
   *     // ... data to create a MT5Account
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the MT5Account we want to update
   *   }
   * })
   */
  upsert<T extends MT5AccountUpsertArgs>(args: Prisma.SelectSubset<T, MT5AccountUpsertArgs<ExtArgs>>): Prisma.Prisma__MT5AccountClient<runtime.Types.Result.GetResult<Prisma.$MT5AccountPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of MT5Accounts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MT5AccountCountArgs} args - Arguments to filter MT5Accounts to count.
   * @example
   * // Count the number of MT5Accounts
   * const count = await prisma.mT5Account.count({
   *   where: {
   *     // ... the filter for the MT5Accounts we want to count
   *   }
   * })
  **/
  count<T extends MT5AccountCountArgs>(
    args?: Prisma.Subset<T, MT5AccountCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], MT5AccountCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a MT5Account.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MT5AccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends MT5AccountAggregateArgs>(args: Prisma.Subset<T, MT5AccountAggregateArgs>): Prisma.PrismaPromise<GetMT5AccountAggregateType<T>>

  /**
   * Group by MT5Account.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MT5AccountGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends MT5AccountGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: MT5AccountGroupByArgs['orderBy'] }
      : { orderBy?: MT5AccountGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, MT5AccountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMT5AccountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the MT5Account model
 */
readonly fields: MT5AccountFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for MT5Account.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__MT5AccountClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  User<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  MT5Transaction<T extends Prisma.MT5Account$MT5TransactionArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MT5Account$MT5TransactionArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MT5TransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the MT5Account model
 */
export interface MT5AccountFieldRefs {
  readonly id: Prisma.FieldRef<"MT5Account", 'String'>
  readonly accountId: Prisma.FieldRef<"MT5Account", 'String'>
  readonly userId: Prisma.FieldRef<"MT5Account", 'String'>
  readonly createdAt: Prisma.FieldRef<"MT5Account", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"MT5Account", 'DateTime'>
}
    

// Custom InputTypes
/**
 * MT5Account findUnique
 */
export type MT5AccountFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Account
   */
  select?: Prisma.MT5AccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Account
   */
  omit?: Prisma.MT5AccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5AccountInclude<ExtArgs> | null
  /**
   * Filter, which MT5Account to fetch.
   */
  where: Prisma.MT5AccountWhereUniqueInput
}

/**
 * MT5Account findUniqueOrThrow
 */
export type MT5AccountFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Account
   */
  select?: Prisma.MT5AccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Account
   */
  omit?: Prisma.MT5AccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5AccountInclude<ExtArgs> | null
  /**
   * Filter, which MT5Account to fetch.
   */
  where: Prisma.MT5AccountWhereUniqueInput
}

/**
 * MT5Account findFirst
 */
export type MT5AccountFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Account
   */
  select?: Prisma.MT5AccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Account
   */
  omit?: Prisma.MT5AccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5AccountInclude<ExtArgs> | null
  /**
   * Filter, which MT5Account to fetch.
   */
  where?: Prisma.MT5AccountWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MT5Accounts to fetch.
   */
  orderBy?: Prisma.MT5AccountOrderByWithRelationInput | Prisma.MT5AccountOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for MT5Accounts.
   */
  cursor?: Prisma.MT5AccountWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MT5Accounts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MT5Accounts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of MT5Accounts.
   */
  distinct?: Prisma.MT5AccountScalarFieldEnum | Prisma.MT5AccountScalarFieldEnum[]
}

/**
 * MT5Account findFirstOrThrow
 */
export type MT5AccountFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Account
   */
  select?: Prisma.MT5AccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Account
   */
  omit?: Prisma.MT5AccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5AccountInclude<ExtArgs> | null
  /**
   * Filter, which MT5Account to fetch.
   */
  where?: Prisma.MT5AccountWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MT5Accounts to fetch.
   */
  orderBy?: Prisma.MT5AccountOrderByWithRelationInput | Prisma.MT5AccountOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for MT5Accounts.
   */
  cursor?: Prisma.MT5AccountWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MT5Accounts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MT5Accounts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of MT5Accounts.
   */
  distinct?: Prisma.MT5AccountScalarFieldEnum | Prisma.MT5AccountScalarFieldEnum[]
}

/**
 * MT5Account findMany
 */
export type MT5AccountFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Account
   */
  select?: Prisma.MT5AccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Account
   */
  omit?: Prisma.MT5AccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5AccountInclude<ExtArgs> | null
  /**
   * Filter, which MT5Accounts to fetch.
   */
  where?: Prisma.MT5AccountWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MT5Accounts to fetch.
   */
  orderBy?: Prisma.MT5AccountOrderByWithRelationInput | Prisma.MT5AccountOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing MT5Accounts.
   */
  cursor?: Prisma.MT5AccountWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MT5Accounts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MT5Accounts.
   */
  skip?: number
  distinct?: Prisma.MT5AccountScalarFieldEnum | Prisma.MT5AccountScalarFieldEnum[]
}

/**
 * MT5Account create
 */
export type MT5AccountCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Account
   */
  select?: Prisma.MT5AccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Account
   */
  omit?: Prisma.MT5AccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5AccountInclude<ExtArgs> | null
  /**
   * The data needed to create a MT5Account.
   */
  data: Prisma.XOR<Prisma.MT5AccountCreateInput, Prisma.MT5AccountUncheckedCreateInput>
}

/**
 * MT5Account createMany
 */
export type MT5AccountCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many MT5Accounts.
   */
  data: Prisma.MT5AccountCreateManyInput | Prisma.MT5AccountCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * MT5Account createManyAndReturn
 */
export type MT5AccountCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Account
   */
  select?: Prisma.MT5AccountSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Account
   */
  omit?: Prisma.MT5AccountOmit<ExtArgs> | null
  /**
   * The data used to create many MT5Accounts.
   */
  data: Prisma.MT5AccountCreateManyInput | Prisma.MT5AccountCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5AccountIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * MT5Account update
 */
export type MT5AccountUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Account
   */
  select?: Prisma.MT5AccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Account
   */
  omit?: Prisma.MT5AccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5AccountInclude<ExtArgs> | null
  /**
   * The data needed to update a MT5Account.
   */
  data: Prisma.XOR<Prisma.MT5AccountUpdateInput, Prisma.MT5AccountUncheckedUpdateInput>
  /**
   * Choose, which MT5Account to update.
   */
  where: Prisma.MT5AccountWhereUniqueInput
}

/**
 * MT5Account updateMany
 */
export type MT5AccountUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update MT5Accounts.
   */
  data: Prisma.XOR<Prisma.MT5AccountUpdateManyMutationInput, Prisma.MT5AccountUncheckedUpdateManyInput>
  /**
   * Filter which MT5Accounts to update
   */
  where?: Prisma.MT5AccountWhereInput
  /**
   * Limit how many MT5Accounts to update.
   */
  limit?: number
}

/**
 * MT5Account updateManyAndReturn
 */
export type MT5AccountUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Account
   */
  select?: Prisma.MT5AccountSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Account
   */
  omit?: Prisma.MT5AccountOmit<ExtArgs> | null
  /**
   * The data used to update MT5Accounts.
   */
  data: Prisma.XOR<Prisma.MT5AccountUpdateManyMutationInput, Prisma.MT5AccountUncheckedUpdateManyInput>
  /**
   * Filter which MT5Accounts to update
   */
  where?: Prisma.MT5AccountWhereInput
  /**
   * Limit how many MT5Accounts to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5AccountIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * MT5Account upsert
 */
export type MT5AccountUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Account
   */
  select?: Prisma.MT5AccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Account
   */
  omit?: Prisma.MT5AccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5AccountInclude<ExtArgs> | null
  /**
   * The filter to search for the MT5Account to update in case it exists.
   */
  where: Prisma.MT5AccountWhereUniqueInput
  /**
   * In case the MT5Account found by the `where` argument doesn't exist, create a new MT5Account with this data.
   */
  create: Prisma.XOR<Prisma.MT5AccountCreateInput, Prisma.MT5AccountUncheckedCreateInput>
  /**
   * In case the MT5Account was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.MT5AccountUpdateInput, Prisma.MT5AccountUncheckedUpdateInput>
}

/**
 * MT5Account delete
 */
export type MT5AccountDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Account
   */
  select?: Prisma.MT5AccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Account
   */
  omit?: Prisma.MT5AccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5AccountInclude<ExtArgs> | null
  /**
   * Filter which MT5Account to delete.
   */
  where: Prisma.MT5AccountWhereUniqueInput
}

/**
 * MT5Account deleteMany
 */
export type MT5AccountDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which MT5Accounts to delete
   */
  where?: Prisma.MT5AccountWhereInput
  /**
   * Limit how many MT5Accounts to delete.
   */
  limit?: number
}

/**
 * MT5Account.MT5Transaction
 */
export type MT5Account$MT5TransactionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Transaction
   */
  select?: Prisma.MT5TransactionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Transaction
   */
  omit?: Prisma.MT5TransactionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5TransactionInclude<ExtArgs> | null
  where?: Prisma.MT5TransactionWhereInput
  orderBy?: Prisma.MT5TransactionOrderByWithRelationInput | Prisma.MT5TransactionOrderByWithRelationInput[]
  cursor?: Prisma.MT5TransactionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MT5TransactionScalarFieldEnum | Prisma.MT5TransactionScalarFieldEnum[]
}

/**
 * MT5Account without action
 */
export type MT5AccountDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Account
   */
  select?: Prisma.MT5AccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Account
   */
  omit?: Prisma.MT5AccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5AccountInclude<ExtArgs> | null
}
