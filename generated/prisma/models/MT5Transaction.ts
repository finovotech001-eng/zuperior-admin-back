
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `MT5Transaction` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model MT5Transaction
 * 
 */
export type MT5TransactionModel = runtime.Types.Result.DefaultSelection<Prisma.$MT5TransactionPayload>

export type AggregateMT5Transaction = {
  _count: MT5TransactionCountAggregateOutputType | null
  _avg: MT5TransactionAvgAggregateOutputType | null
  _sum: MT5TransactionSumAggregateOutputType | null
  _min: MT5TransactionMinAggregateOutputType | null
  _max: MT5TransactionMaxAggregateOutputType | null
}

export type MT5TransactionAvgAggregateOutputType = {
  amount: number | null
}

export type MT5TransactionSumAggregateOutputType = {
  amount: number | null
}

export type MT5TransactionMinAggregateOutputType = {
  id: string | null
  type: string | null
  amount: number | null
  status: string | null
  paymentMethod: string | null
  transactionId: string | null
  comment: string | null
  mt5AccountId: string | null
  createdAt: Date | null
  currency: string | null
  depositId: string | null
  withdrawalId: string | null
  userId: string | null
  processedBy: string | null
  processedAt: Date | null
  updatedAt: Date | null
}

export type MT5TransactionMaxAggregateOutputType = {
  id: string | null
  type: string | null
  amount: number | null
  status: string | null
  paymentMethod: string | null
  transactionId: string | null
  comment: string | null
  mt5AccountId: string | null
  createdAt: Date | null
  currency: string | null
  depositId: string | null
  withdrawalId: string | null
  userId: string | null
  processedBy: string | null
  processedAt: Date | null
  updatedAt: Date | null
}

export type MT5TransactionCountAggregateOutputType = {
  id: number
  type: number
  amount: number
  status: number
  paymentMethod: number
  transactionId: number
  comment: number
  mt5AccountId: number
  createdAt: number
  currency: number
  depositId: number
  withdrawalId: number
  userId: number
  processedBy: number
  processedAt: number
  updatedAt: number
  _all: number
}


export type MT5TransactionAvgAggregateInputType = {
  amount?: true
}

export type MT5TransactionSumAggregateInputType = {
  amount?: true
}

export type MT5TransactionMinAggregateInputType = {
  id?: true
  type?: true
  amount?: true
  status?: true
  paymentMethod?: true
  transactionId?: true
  comment?: true
  mt5AccountId?: true
  createdAt?: true
  currency?: true
  depositId?: true
  withdrawalId?: true
  userId?: true
  processedBy?: true
  processedAt?: true
  updatedAt?: true
}

export type MT5TransactionMaxAggregateInputType = {
  id?: true
  type?: true
  amount?: true
  status?: true
  paymentMethod?: true
  transactionId?: true
  comment?: true
  mt5AccountId?: true
  createdAt?: true
  currency?: true
  depositId?: true
  withdrawalId?: true
  userId?: true
  processedBy?: true
  processedAt?: true
  updatedAt?: true
}

export type MT5TransactionCountAggregateInputType = {
  id?: true
  type?: true
  amount?: true
  status?: true
  paymentMethod?: true
  transactionId?: true
  comment?: true
  mt5AccountId?: true
  createdAt?: true
  currency?: true
  depositId?: true
  withdrawalId?: true
  userId?: true
  processedBy?: true
  processedAt?: true
  updatedAt?: true
  _all?: true
}

export type MT5TransactionAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which MT5Transaction to aggregate.
   */
  where?: Prisma.MT5TransactionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MT5Transactions to fetch.
   */
  orderBy?: Prisma.MT5TransactionOrderByWithRelationInput | Prisma.MT5TransactionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.MT5TransactionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MT5Transactions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MT5Transactions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned MT5Transactions
  **/
  _count?: true | MT5TransactionCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: MT5TransactionAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: MT5TransactionSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: MT5TransactionMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: MT5TransactionMaxAggregateInputType
}

export type GetMT5TransactionAggregateType<T extends MT5TransactionAggregateArgs> = {
      [P in keyof T & keyof AggregateMT5Transaction]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateMT5Transaction[P]>
    : Prisma.GetScalarType<T[P], AggregateMT5Transaction[P]>
}




export type MT5TransactionGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MT5TransactionWhereInput
  orderBy?: Prisma.MT5TransactionOrderByWithAggregationInput | Prisma.MT5TransactionOrderByWithAggregationInput[]
  by: Prisma.MT5TransactionScalarFieldEnum[] | Prisma.MT5TransactionScalarFieldEnum
  having?: Prisma.MT5TransactionScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: MT5TransactionCountAggregateInputType | true
  _avg?: MT5TransactionAvgAggregateInputType
  _sum?: MT5TransactionSumAggregateInputType
  _min?: MT5TransactionMinAggregateInputType
  _max?: MT5TransactionMaxAggregateInputType
}

export type MT5TransactionGroupByOutputType = {
  id: string
  type: string
  amount: number
  status: string
  paymentMethod: string | null
  transactionId: string | null
  comment: string | null
  mt5AccountId: string
  createdAt: Date
  currency: string
  depositId: string | null
  withdrawalId: string | null
  userId: string | null
  processedBy: string | null
  processedAt: Date | null
  updatedAt: Date
  _count: MT5TransactionCountAggregateOutputType | null
  _avg: MT5TransactionAvgAggregateOutputType | null
  _sum: MT5TransactionSumAggregateOutputType | null
  _min: MT5TransactionMinAggregateOutputType | null
  _max: MT5TransactionMaxAggregateOutputType | null
}

type GetMT5TransactionGroupByPayload<T extends MT5TransactionGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<MT5TransactionGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof MT5TransactionGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], MT5TransactionGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], MT5TransactionGroupByOutputType[P]>
      }
    >
  >



export type MT5TransactionWhereInput = {
  AND?: Prisma.MT5TransactionWhereInput | Prisma.MT5TransactionWhereInput[]
  OR?: Prisma.MT5TransactionWhereInput[]
  NOT?: Prisma.MT5TransactionWhereInput | Prisma.MT5TransactionWhereInput[]
  id?: Prisma.StringFilter<"MT5Transaction"> | string
  type?: Prisma.StringFilter<"MT5Transaction"> | string
  amount?: Prisma.FloatFilter<"MT5Transaction"> | number
  status?: Prisma.StringFilter<"MT5Transaction"> | string
  paymentMethod?: Prisma.StringNullableFilter<"MT5Transaction"> | string | null
  transactionId?: Prisma.StringNullableFilter<"MT5Transaction"> | string | null
  comment?: Prisma.StringNullableFilter<"MT5Transaction"> | string | null
  mt5AccountId?: Prisma.StringFilter<"MT5Transaction"> | string
  createdAt?: Prisma.DateTimeFilter<"MT5Transaction"> | Date | string
  currency?: Prisma.StringFilter<"MT5Transaction"> | string
  depositId?: Prisma.StringNullableFilter<"MT5Transaction"> | string | null
  withdrawalId?: Prisma.StringNullableFilter<"MT5Transaction"> | string | null
  userId?: Prisma.StringNullableFilter<"MT5Transaction"> | string | null
  processedBy?: Prisma.StringNullableFilter<"MT5Transaction"> | string | null
  processedAt?: Prisma.DateTimeNullableFilter<"MT5Transaction"> | Date | string | null
  updatedAt?: Prisma.DateTimeFilter<"MT5Transaction"> | Date | string
  MT5Account?: Prisma.XOR<Prisma.MT5AccountScalarRelationFilter, Prisma.MT5AccountWhereInput>
}

export type MT5TransactionOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  amount?: Prisma.SortOrder
  status?: Prisma.SortOrder
  paymentMethod?: Prisma.SortOrderInput | Prisma.SortOrder
  transactionId?: Prisma.SortOrderInput | Prisma.SortOrder
  comment?: Prisma.SortOrderInput | Prisma.SortOrder
  mt5AccountId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  currency?: Prisma.SortOrder
  depositId?: Prisma.SortOrderInput | Prisma.SortOrder
  withdrawalId?: Prisma.SortOrderInput | Prisma.SortOrder
  userId?: Prisma.SortOrderInput | Prisma.SortOrder
  processedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  processedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  MT5Account?: Prisma.MT5AccountOrderByWithRelationInput
}

export type MT5TransactionWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.MT5TransactionWhereInput | Prisma.MT5TransactionWhereInput[]
  OR?: Prisma.MT5TransactionWhereInput[]
  NOT?: Prisma.MT5TransactionWhereInput | Prisma.MT5TransactionWhereInput[]
  type?: Prisma.StringFilter<"MT5Transaction"> | string
  amount?: Prisma.FloatFilter<"MT5Transaction"> | number
  status?: Prisma.StringFilter<"MT5Transaction"> | string
  paymentMethod?: Prisma.StringNullableFilter<"MT5Transaction"> | string | null
  transactionId?: Prisma.StringNullableFilter<"MT5Transaction"> | string | null
  comment?: Prisma.StringNullableFilter<"MT5Transaction"> | string | null
  mt5AccountId?: Prisma.StringFilter<"MT5Transaction"> | string
  createdAt?: Prisma.DateTimeFilter<"MT5Transaction"> | Date | string
  currency?: Prisma.StringFilter<"MT5Transaction"> | string
  depositId?: Prisma.StringNullableFilter<"MT5Transaction"> | string | null
  withdrawalId?: Prisma.StringNullableFilter<"MT5Transaction"> | string | null
  userId?: Prisma.StringNullableFilter<"MT5Transaction"> | string | null
  processedBy?: Prisma.StringNullableFilter<"MT5Transaction"> | string | null
  processedAt?: Prisma.DateTimeNullableFilter<"MT5Transaction"> | Date | string | null
  updatedAt?: Prisma.DateTimeFilter<"MT5Transaction"> | Date | string
  MT5Account?: Prisma.XOR<Prisma.MT5AccountScalarRelationFilter, Prisma.MT5AccountWhereInput>
}, "id">

export type MT5TransactionOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  amount?: Prisma.SortOrder
  status?: Prisma.SortOrder
  paymentMethod?: Prisma.SortOrderInput | Prisma.SortOrder
  transactionId?: Prisma.SortOrderInput | Prisma.SortOrder
  comment?: Prisma.SortOrderInput | Prisma.SortOrder
  mt5AccountId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  currency?: Prisma.SortOrder
  depositId?: Prisma.SortOrderInput | Prisma.SortOrder
  withdrawalId?: Prisma.SortOrderInput | Prisma.SortOrder
  userId?: Prisma.SortOrderInput | Prisma.SortOrder
  processedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  processedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.MT5TransactionCountOrderByAggregateInput
  _avg?: Prisma.MT5TransactionAvgOrderByAggregateInput
  _max?: Prisma.MT5TransactionMaxOrderByAggregateInput
  _min?: Prisma.MT5TransactionMinOrderByAggregateInput
  _sum?: Prisma.MT5TransactionSumOrderByAggregateInput
}

export type MT5TransactionScalarWhereWithAggregatesInput = {
  AND?: Prisma.MT5TransactionScalarWhereWithAggregatesInput | Prisma.MT5TransactionScalarWhereWithAggregatesInput[]
  OR?: Prisma.MT5TransactionScalarWhereWithAggregatesInput[]
  NOT?: Prisma.MT5TransactionScalarWhereWithAggregatesInput | Prisma.MT5TransactionScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"MT5Transaction"> | string
  type?: Prisma.StringWithAggregatesFilter<"MT5Transaction"> | string
  amount?: Prisma.FloatWithAggregatesFilter<"MT5Transaction"> | number
  status?: Prisma.StringWithAggregatesFilter<"MT5Transaction"> | string
  paymentMethod?: Prisma.StringNullableWithAggregatesFilter<"MT5Transaction"> | string | null
  transactionId?: Prisma.StringNullableWithAggregatesFilter<"MT5Transaction"> | string | null
  comment?: Prisma.StringNullableWithAggregatesFilter<"MT5Transaction"> | string | null
  mt5AccountId?: Prisma.StringWithAggregatesFilter<"MT5Transaction"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"MT5Transaction"> | Date | string
  currency?: Prisma.StringWithAggregatesFilter<"MT5Transaction"> | string
  depositId?: Prisma.StringNullableWithAggregatesFilter<"MT5Transaction"> | string | null
  withdrawalId?: Prisma.StringNullableWithAggregatesFilter<"MT5Transaction"> | string | null
  userId?: Prisma.StringNullableWithAggregatesFilter<"MT5Transaction"> | string | null
  processedBy?: Prisma.StringNullableWithAggregatesFilter<"MT5Transaction"> | string | null
  processedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"MT5Transaction"> | Date | string | null
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"MT5Transaction"> | Date | string
}

export type MT5TransactionCreateInput = {
  id: string
  type: string
  amount: number
  status?: string
  paymentMethod?: string | null
  transactionId?: string | null
  comment?: string | null
  createdAt?: Date | string
  currency?: string
  depositId?: string | null
  withdrawalId?: string | null
  userId?: string | null
  processedBy?: string | null
  processedAt?: Date | string | null
  updatedAt: Date | string
  MT5Account: Prisma.MT5AccountCreateNestedOneWithoutMT5TransactionInput
}

export type MT5TransactionUncheckedCreateInput = {
  id: string
  type: string
  amount: number
  status?: string
  paymentMethod?: string | null
  transactionId?: string | null
  comment?: string | null
  mt5AccountId: string
  createdAt?: Date | string
  currency?: string
  depositId?: string | null
  withdrawalId?: string | null
  userId?: string | null
  processedBy?: string | null
  processedAt?: Date | string | null
  updatedAt: Date | string
}

export type MT5TransactionUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  amount?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.StringFieldUpdateOperationsInput | string
  paymentMethod?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  transactionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  comment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  depositId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  withdrawalId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  processedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  processedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  MT5Account?: Prisma.MT5AccountUpdateOneRequiredWithoutMT5TransactionNestedInput
}

export type MT5TransactionUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  amount?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.StringFieldUpdateOperationsInput | string
  paymentMethod?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  transactionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  comment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mt5AccountId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  depositId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  withdrawalId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  processedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  processedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MT5TransactionCreateManyInput = {
  id: string
  type: string
  amount: number
  status?: string
  paymentMethod?: string | null
  transactionId?: string | null
  comment?: string | null
  mt5AccountId: string
  createdAt?: Date | string
  currency?: string
  depositId?: string | null
  withdrawalId?: string | null
  userId?: string | null
  processedBy?: string | null
  processedAt?: Date | string | null
  updatedAt: Date | string
}

export type MT5TransactionUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  amount?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.StringFieldUpdateOperationsInput | string
  paymentMethod?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  transactionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  comment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  depositId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  withdrawalId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  processedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  processedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MT5TransactionUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  amount?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.StringFieldUpdateOperationsInput | string
  paymentMethod?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  transactionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  comment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mt5AccountId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  depositId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  withdrawalId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  processedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  processedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MT5TransactionListRelationFilter = {
  every?: Prisma.MT5TransactionWhereInput
  some?: Prisma.MT5TransactionWhereInput
  none?: Prisma.MT5TransactionWhereInput
}

export type MT5TransactionOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type MT5TransactionCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  amount?: Prisma.SortOrder
  status?: Prisma.SortOrder
  paymentMethod?: Prisma.SortOrder
  transactionId?: Prisma.SortOrder
  comment?: Prisma.SortOrder
  mt5AccountId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  currency?: Prisma.SortOrder
  depositId?: Prisma.SortOrder
  withdrawalId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  processedBy?: Prisma.SortOrder
  processedAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MT5TransactionAvgOrderByAggregateInput = {
  amount?: Prisma.SortOrder
}

export type MT5TransactionMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  amount?: Prisma.SortOrder
  status?: Prisma.SortOrder
  paymentMethod?: Prisma.SortOrder
  transactionId?: Prisma.SortOrder
  comment?: Prisma.SortOrder
  mt5AccountId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  currency?: Prisma.SortOrder
  depositId?: Prisma.SortOrder
  withdrawalId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  processedBy?: Prisma.SortOrder
  processedAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MT5TransactionMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  amount?: Prisma.SortOrder
  status?: Prisma.SortOrder
  paymentMethod?: Prisma.SortOrder
  transactionId?: Prisma.SortOrder
  comment?: Prisma.SortOrder
  mt5AccountId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  currency?: Prisma.SortOrder
  depositId?: Prisma.SortOrder
  withdrawalId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  processedBy?: Prisma.SortOrder
  processedAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MT5TransactionSumOrderByAggregateInput = {
  amount?: Prisma.SortOrder
}

export type MT5TransactionCreateNestedManyWithoutMT5AccountInput = {
  create?: Prisma.XOR<Prisma.MT5TransactionCreateWithoutMT5AccountInput, Prisma.MT5TransactionUncheckedCreateWithoutMT5AccountInput> | Prisma.MT5TransactionCreateWithoutMT5AccountInput[] | Prisma.MT5TransactionUncheckedCreateWithoutMT5AccountInput[]
  connectOrCreate?: Prisma.MT5TransactionCreateOrConnectWithoutMT5AccountInput | Prisma.MT5TransactionCreateOrConnectWithoutMT5AccountInput[]
  createMany?: Prisma.MT5TransactionCreateManyMT5AccountInputEnvelope
  connect?: Prisma.MT5TransactionWhereUniqueInput | Prisma.MT5TransactionWhereUniqueInput[]
}

export type MT5TransactionUncheckedCreateNestedManyWithoutMT5AccountInput = {
  create?: Prisma.XOR<Prisma.MT5TransactionCreateWithoutMT5AccountInput, Prisma.MT5TransactionUncheckedCreateWithoutMT5AccountInput> | Prisma.MT5TransactionCreateWithoutMT5AccountInput[] | Prisma.MT5TransactionUncheckedCreateWithoutMT5AccountInput[]
  connectOrCreate?: Prisma.MT5TransactionCreateOrConnectWithoutMT5AccountInput | Prisma.MT5TransactionCreateOrConnectWithoutMT5AccountInput[]
  createMany?: Prisma.MT5TransactionCreateManyMT5AccountInputEnvelope
  connect?: Prisma.MT5TransactionWhereUniqueInput | Prisma.MT5TransactionWhereUniqueInput[]
}

export type MT5TransactionUpdateManyWithoutMT5AccountNestedInput = {
  create?: Prisma.XOR<Prisma.MT5TransactionCreateWithoutMT5AccountInput, Prisma.MT5TransactionUncheckedCreateWithoutMT5AccountInput> | Prisma.MT5TransactionCreateWithoutMT5AccountInput[] | Prisma.MT5TransactionUncheckedCreateWithoutMT5AccountInput[]
  connectOrCreate?: Prisma.MT5TransactionCreateOrConnectWithoutMT5AccountInput | Prisma.MT5TransactionCreateOrConnectWithoutMT5AccountInput[]
  upsert?: Prisma.MT5TransactionUpsertWithWhereUniqueWithoutMT5AccountInput | Prisma.MT5TransactionUpsertWithWhereUniqueWithoutMT5AccountInput[]
  createMany?: Prisma.MT5TransactionCreateManyMT5AccountInputEnvelope
  set?: Prisma.MT5TransactionWhereUniqueInput | Prisma.MT5TransactionWhereUniqueInput[]
  disconnect?: Prisma.MT5TransactionWhereUniqueInput | Prisma.MT5TransactionWhereUniqueInput[]
  delete?: Prisma.MT5TransactionWhereUniqueInput | Prisma.MT5TransactionWhereUniqueInput[]
  connect?: Prisma.MT5TransactionWhereUniqueInput | Prisma.MT5TransactionWhereUniqueInput[]
  update?: Prisma.MT5TransactionUpdateWithWhereUniqueWithoutMT5AccountInput | Prisma.MT5TransactionUpdateWithWhereUniqueWithoutMT5AccountInput[]
  updateMany?: Prisma.MT5TransactionUpdateManyWithWhereWithoutMT5AccountInput | Prisma.MT5TransactionUpdateManyWithWhereWithoutMT5AccountInput[]
  deleteMany?: Prisma.MT5TransactionScalarWhereInput | Prisma.MT5TransactionScalarWhereInput[]
}

export type MT5TransactionUncheckedUpdateManyWithoutMT5AccountNestedInput = {
  create?: Prisma.XOR<Prisma.MT5TransactionCreateWithoutMT5AccountInput, Prisma.MT5TransactionUncheckedCreateWithoutMT5AccountInput> | Prisma.MT5TransactionCreateWithoutMT5AccountInput[] | Prisma.MT5TransactionUncheckedCreateWithoutMT5AccountInput[]
  connectOrCreate?: Prisma.MT5TransactionCreateOrConnectWithoutMT5AccountInput | Prisma.MT5TransactionCreateOrConnectWithoutMT5AccountInput[]
  upsert?: Prisma.MT5TransactionUpsertWithWhereUniqueWithoutMT5AccountInput | Prisma.MT5TransactionUpsertWithWhereUniqueWithoutMT5AccountInput[]
  createMany?: Prisma.MT5TransactionCreateManyMT5AccountInputEnvelope
  set?: Prisma.MT5TransactionWhereUniqueInput | Prisma.MT5TransactionWhereUniqueInput[]
  disconnect?: Prisma.MT5TransactionWhereUniqueInput | Prisma.MT5TransactionWhereUniqueInput[]
  delete?: Prisma.MT5TransactionWhereUniqueInput | Prisma.MT5TransactionWhereUniqueInput[]
  connect?: Prisma.MT5TransactionWhereUniqueInput | Prisma.MT5TransactionWhereUniqueInput[]
  update?: Prisma.MT5TransactionUpdateWithWhereUniqueWithoutMT5AccountInput | Prisma.MT5TransactionUpdateWithWhereUniqueWithoutMT5AccountInput[]
  updateMany?: Prisma.MT5TransactionUpdateManyWithWhereWithoutMT5AccountInput | Prisma.MT5TransactionUpdateManyWithWhereWithoutMT5AccountInput[]
  deleteMany?: Prisma.MT5TransactionScalarWhereInput | Prisma.MT5TransactionScalarWhereInput[]
}

export type MT5TransactionCreateWithoutMT5AccountInput = {
  id: string
  type: string
  amount: number
  status?: string
  paymentMethod?: string | null
  transactionId?: string | null
  comment?: string | null
  createdAt?: Date | string
  currency?: string
  depositId?: string | null
  withdrawalId?: string | null
  userId?: string | null
  processedBy?: string | null
  processedAt?: Date | string | null
  updatedAt: Date | string
}

export type MT5TransactionUncheckedCreateWithoutMT5AccountInput = {
  id: string
  type: string
  amount: number
  status?: string
  paymentMethod?: string | null
  transactionId?: string | null
  comment?: string | null
  createdAt?: Date | string
  currency?: string
  depositId?: string | null
  withdrawalId?: string | null
  userId?: string | null
  processedBy?: string | null
  processedAt?: Date | string | null
  updatedAt: Date | string
}

export type MT5TransactionCreateOrConnectWithoutMT5AccountInput = {
  where: Prisma.MT5TransactionWhereUniqueInput
  create: Prisma.XOR<Prisma.MT5TransactionCreateWithoutMT5AccountInput, Prisma.MT5TransactionUncheckedCreateWithoutMT5AccountInput>
}

export type MT5TransactionCreateManyMT5AccountInputEnvelope = {
  data: Prisma.MT5TransactionCreateManyMT5AccountInput | Prisma.MT5TransactionCreateManyMT5AccountInput[]
  skipDuplicates?: boolean
}

export type MT5TransactionUpsertWithWhereUniqueWithoutMT5AccountInput = {
  where: Prisma.MT5TransactionWhereUniqueInput
  update: Prisma.XOR<Prisma.MT5TransactionUpdateWithoutMT5AccountInput, Prisma.MT5TransactionUncheckedUpdateWithoutMT5AccountInput>
  create: Prisma.XOR<Prisma.MT5TransactionCreateWithoutMT5AccountInput, Prisma.MT5TransactionUncheckedCreateWithoutMT5AccountInput>
}

export type MT5TransactionUpdateWithWhereUniqueWithoutMT5AccountInput = {
  where: Prisma.MT5TransactionWhereUniqueInput
  data: Prisma.XOR<Prisma.MT5TransactionUpdateWithoutMT5AccountInput, Prisma.MT5TransactionUncheckedUpdateWithoutMT5AccountInput>
}

export type MT5TransactionUpdateManyWithWhereWithoutMT5AccountInput = {
  where: Prisma.MT5TransactionScalarWhereInput
  data: Prisma.XOR<Prisma.MT5TransactionUpdateManyMutationInput, Prisma.MT5TransactionUncheckedUpdateManyWithoutMT5AccountInput>
}

export type MT5TransactionScalarWhereInput = {
  AND?: Prisma.MT5TransactionScalarWhereInput | Prisma.MT5TransactionScalarWhereInput[]
  OR?: Prisma.MT5TransactionScalarWhereInput[]
  NOT?: Prisma.MT5TransactionScalarWhereInput | Prisma.MT5TransactionScalarWhereInput[]
  id?: Prisma.StringFilter<"MT5Transaction"> | string
  type?: Prisma.StringFilter<"MT5Transaction"> | string
  amount?: Prisma.FloatFilter<"MT5Transaction"> | number
  status?: Prisma.StringFilter<"MT5Transaction"> | string
  paymentMethod?: Prisma.StringNullableFilter<"MT5Transaction"> | string | null
  transactionId?: Prisma.StringNullableFilter<"MT5Transaction"> | string | null
  comment?: Prisma.StringNullableFilter<"MT5Transaction"> | string | null
  mt5AccountId?: Prisma.StringFilter<"MT5Transaction"> | string
  createdAt?: Prisma.DateTimeFilter<"MT5Transaction"> | Date | string
  currency?: Prisma.StringFilter<"MT5Transaction"> | string
  depositId?: Prisma.StringNullableFilter<"MT5Transaction"> | string | null
  withdrawalId?: Prisma.StringNullableFilter<"MT5Transaction"> | string | null
  userId?: Prisma.StringNullableFilter<"MT5Transaction"> | string | null
  processedBy?: Prisma.StringNullableFilter<"MT5Transaction"> | string | null
  processedAt?: Prisma.DateTimeNullableFilter<"MT5Transaction"> | Date | string | null
  updatedAt?: Prisma.DateTimeFilter<"MT5Transaction"> | Date | string
}

export type MT5TransactionCreateManyMT5AccountInput = {
  id: string
  type: string
  amount: number
  status?: string
  paymentMethod?: string | null
  transactionId?: string | null
  comment?: string | null
  createdAt?: Date | string
  currency?: string
  depositId?: string | null
  withdrawalId?: string | null
  userId?: string | null
  processedBy?: string | null
  processedAt?: Date | string | null
  updatedAt: Date | string
}

export type MT5TransactionUpdateWithoutMT5AccountInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  amount?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.StringFieldUpdateOperationsInput | string
  paymentMethod?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  transactionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  comment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  depositId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  withdrawalId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  processedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  processedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MT5TransactionUncheckedUpdateWithoutMT5AccountInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  amount?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.StringFieldUpdateOperationsInput | string
  paymentMethod?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  transactionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  comment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  depositId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  withdrawalId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  processedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  processedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MT5TransactionUncheckedUpdateManyWithoutMT5AccountInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  amount?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.StringFieldUpdateOperationsInput | string
  paymentMethod?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  transactionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  comment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  depositId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  withdrawalId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  processedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  processedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type MT5TransactionSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  type?: boolean
  amount?: boolean
  status?: boolean
  paymentMethod?: boolean
  transactionId?: boolean
  comment?: boolean
  mt5AccountId?: boolean
  createdAt?: boolean
  currency?: boolean
  depositId?: boolean
  withdrawalId?: boolean
  userId?: boolean
  processedBy?: boolean
  processedAt?: boolean
  updatedAt?: boolean
  MT5Account?: boolean | Prisma.MT5AccountDefaultArgs<ExtArgs>
}, ExtArgs["result"]["mT5Transaction"]>

export type MT5TransactionSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  type?: boolean
  amount?: boolean
  status?: boolean
  paymentMethod?: boolean
  transactionId?: boolean
  comment?: boolean
  mt5AccountId?: boolean
  createdAt?: boolean
  currency?: boolean
  depositId?: boolean
  withdrawalId?: boolean
  userId?: boolean
  processedBy?: boolean
  processedAt?: boolean
  updatedAt?: boolean
  MT5Account?: boolean | Prisma.MT5AccountDefaultArgs<ExtArgs>
}, ExtArgs["result"]["mT5Transaction"]>

export type MT5TransactionSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  type?: boolean
  amount?: boolean
  status?: boolean
  paymentMethod?: boolean
  transactionId?: boolean
  comment?: boolean
  mt5AccountId?: boolean
  createdAt?: boolean
  currency?: boolean
  depositId?: boolean
  withdrawalId?: boolean
  userId?: boolean
  processedBy?: boolean
  processedAt?: boolean
  updatedAt?: boolean
  MT5Account?: boolean | Prisma.MT5AccountDefaultArgs<ExtArgs>
}, ExtArgs["result"]["mT5Transaction"]>

export type MT5TransactionSelectScalar = {
  id?: boolean
  type?: boolean
  amount?: boolean
  status?: boolean
  paymentMethod?: boolean
  transactionId?: boolean
  comment?: boolean
  mt5AccountId?: boolean
  createdAt?: boolean
  currency?: boolean
  depositId?: boolean
  withdrawalId?: boolean
  userId?: boolean
  processedBy?: boolean
  processedAt?: boolean
  updatedAt?: boolean
}

export type MT5TransactionOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "type" | "amount" | "status" | "paymentMethod" | "transactionId" | "comment" | "mt5AccountId" | "createdAt" | "currency" | "depositId" | "withdrawalId" | "userId" | "processedBy" | "processedAt" | "updatedAt", ExtArgs["result"]["mT5Transaction"]>
export type MT5TransactionInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  MT5Account?: boolean | Prisma.MT5AccountDefaultArgs<ExtArgs>
}
export type MT5TransactionIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  MT5Account?: boolean | Prisma.MT5AccountDefaultArgs<ExtArgs>
}
export type MT5TransactionIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  MT5Account?: boolean | Prisma.MT5AccountDefaultArgs<ExtArgs>
}

export type $MT5TransactionPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "MT5Transaction"
  objects: {
    MT5Account: Prisma.$MT5AccountPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    type: string
    amount: number
    status: string
    paymentMethod: string | null
    transactionId: string | null
    comment: string | null
    mt5AccountId: string
    createdAt: Date
    currency: string
    depositId: string | null
    withdrawalId: string | null
    userId: string | null
    processedBy: string | null
    processedAt: Date | null
    updatedAt: Date
  }, ExtArgs["result"]["mT5Transaction"]>
  composites: {}
}

export type MT5TransactionGetPayload<S extends boolean | null | undefined | MT5TransactionDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$MT5TransactionPayload, S>

export type MT5TransactionCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<MT5TransactionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: MT5TransactionCountAggregateInputType | true
  }

export interface MT5TransactionDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MT5Transaction'], meta: { name: 'MT5Transaction' } }
  /**
   * Find zero or one MT5Transaction that matches the filter.
   * @param {MT5TransactionFindUniqueArgs} args - Arguments to find a MT5Transaction
   * @example
   * // Get one MT5Transaction
   * const mT5Transaction = await prisma.mT5Transaction.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends MT5TransactionFindUniqueArgs>(args: Prisma.SelectSubset<T, MT5TransactionFindUniqueArgs<ExtArgs>>): Prisma.Prisma__MT5TransactionClient<runtime.Types.Result.GetResult<Prisma.$MT5TransactionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one MT5Transaction that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {MT5TransactionFindUniqueOrThrowArgs} args - Arguments to find a MT5Transaction
   * @example
   * // Get one MT5Transaction
   * const mT5Transaction = await prisma.mT5Transaction.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends MT5TransactionFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, MT5TransactionFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__MT5TransactionClient<runtime.Types.Result.GetResult<Prisma.$MT5TransactionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first MT5Transaction that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MT5TransactionFindFirstArgs} args - Arguments to find a MT5Transaction
   * @example
   * // Get one MT5Transaction
   * const mT5Transaction = await prisma.mT5Transaction.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends MT5TransactionFindFirstArgs>(args?: Prisma.SelectSubset<T, MT5TransactionFindFirstArgs<ExtArgs>>): Prisma.Prisma__MT5TransactionClient<runtime.Types.Result.GetResult<Prisma.$MT5TransactionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first MT5Transaction that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MT5TransactionFindFirstOrThrowArgs} args - Arguments to find a MT5Transaction
   * @example
   * // Get one MT5Transaction
   * const mT5Transaction = await prisma.mT5Transaction.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends MT5TransactionFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, MT5TransactionFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__MT5TransactionClient<runtime.Types.Result.GetResult<Prisma.$MT5TransactionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more MT5Transactions that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MT5TransactionFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all MT5Transactions
   * const mT5Transactions = await prisma.mT5Transaction.findMany()
   * 
   * // Get first 10 MT5Transactions
   * const mT5Transactions = await prisma.mT5Transaction.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const mT5TransactionWithIdOnly = await prisma.mT5Transaction.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends MT5TransactionFindManyArgs>(args?: Prisma.SelectSubset<T, MT5TransactionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MT5TransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a MT5Transaction.
   * @param {MT5TransactionCreateArgs} args - Arguments to create a MT5Transaction.
   * @example
   * // Create one MT5Transaction
   * const MT5Transaction = await prisma.mT5Transaction.create({
   *   data: {
   *     // ... data to create a MT5Transaction
   *   }
   * })
   * 
   */
  create<T extends MT5TransactionCreateArgs>(args: Prisma.SelectSubset<T, MT5TransactionCreateArgs<ExtArgs>>): Prisma.Prisma__MT5TransactionClient<runtime.Types.Result.GetResult<Prisma.$MT5TransactionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many MT5Transactions.
   * @param {MT5TransactionCreateManyArgs} args - Arguments to create many MT5Transactions.
   * @example
   * // Create many MT5Transactions
   * const mT5Transaction = await prisma.mT5Transaction.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends MT5TransactionCreateManyArgs>(args?: Prisma.SelectSubset<T, MT5TransactionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many MT5Transactions and returns the data saved in the database.
   * @param {MT5TransactionCreateManyAndReturnArgs} args - Arguments to create many MT5Transactions.
   * @example
   * // Create many MT5Transactions
   * const mT5Transaction = await prisma.mT5Transaction.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many MT5Transactions and only return the `id`
   * const mT5TransactionWithIdOnly = await prisma.mT5Transaction.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends MT5TransactionCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, MT5TransactionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MT5TransactionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a MT5Transaction.
   * @param {MT5TransactionDeleteArgs} args - Arguments to delete one MT5Transaction.
   * @example
   * // Delete one MT5Transaction
   * const MT5Transaction = await prisma.mT5Transaction.delete({
   *   where: {
   *     // ... filter to delete one MT5Transaction
   *   }
   * })
   * 
   */
  delete<T extends MT5TransactionDeleteArgs>(args: Prisma.SelectSubset<T, MT5TransactionDeleteArgs<ExtArgs>>): Prisma.Prisma__MT5TransactionClient<runtime.Types.Result.GetResult<Prisma.$MT5TransactionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one MT5Transaction.
   * @param {MT5TransactionUpdateArgs} args - Arguments to update one MT5Transaction.
   * @example
   * // Update one MT5Transaction
   * const mT5Transaction = await prisma.mT5Transaction.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends MT5TransactionUpdateArgs>(args: Prisma.SelectSubset<T, MT5TransactionUpdateArgs<ExtArgs>>): Prisma.Prisma__MT5TransactionClient<runtime.Types.Result.GetResult<Prisma.$MT5TransactionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more MT5Transactions.
   * @param {MT5TransactionDeleteManyArgs} args - Arguments to filter MT5Transactions to delete.
   * @example
   * // Delete a few MT5Transactions
   * const { count } = await prisma.mT5Transaction.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends MT5TransactionDeleteManyArgs>(args?: Prisma.SelectSubset<T, MT5TransactionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more MT5Transactions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MT5TransactionUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many MT5Transactions
   * const mT5Transaction = await prisma.mT5Transaction.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends MT5TransactionUpdateManyArgs>(args: Prisma.SelectSubset<T, MT5TransactionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more MT5Transactions and returns the data updated in the database.
   * @param {MT5TransactionUpdateManyAndReturnArgs} args - Arguments to update many MT5Transactions.
   * @example
   * // Update many MT5Transactions
   * const mT5Transaction = await prisma.mT5Transaction.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more MT5Transactions and only return the `id`
   * const mT5TransactionWithIdOnly = await prisma.mT5Transaction.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends MT5TransactionUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, MT5TransactionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MT5TransactionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one MT5Transaction.
   * @param {MT5TransactionUpsertArgs} args - Arguments to update or create a MT5Transaction.
   * @example
   * // Update or create a MT5Transaction
   * const mT5Transaction = await prisma.mT5Transaction.upsert({
   *   create: {
   *     // ... data to create a MT5Transaction
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the MT5Transaction we want to update
   *   }
   * })
   */
  upsert<T extends MT5TransactionUpsertArgs>(args: Prisma.SelectSubset<T, MT5TransactionUpsertArgs<ExtArgs>>): Prisma.Prisma__MT5TransactionClient<runtime.Types.Result.GetResult<Prisma.$MT5TransactionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of MT5Transactions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MT5TransactionCountArgs} args - Arguments to filter MT5Transactions to count.
   * @example
   * // Count the number of MT5Transactions
   * const count = await prisma.mT5Transaction.count({
   *   where: {
   *     // ... the filter for the MT5Transactions we want to count
   *   }
   * })
  **/
  count<T extends MT5TransactionCountArgs>(
    args?: Prisma.Subset<T, MT5TransactionCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], MT5TransactionCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a MT5Transaction.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MT5TransactionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends MT5TransactionAggregateArgs>(args: Prisma.Subset<T, MT5TransactionAggregateArgs>): Prisma.PrismaPromise<GetMT5TransactionAggregateType<T>>

  /**
   * Group by MT5Transaction.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MT5TransactionGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends MT5TransactionGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: MT5TransactionGroupByArgs['orderBy'] }
      : { orderBy?: MT5TransactionGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, MT5TransactionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMT5TransactionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the MT5Transaction model
 */
readonly fields: MT5TransactionFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for MT5Transaction.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__MT5TransactionClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  MT5Account<T extends Prisma.MT5AccountDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MT5AccountDefaultArgs<ExtArgs>>): Prisma.Prisma__MT5AccountClient<runtime.Types.Result.GetResult<Prisma.$MT5AccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the MT5Transaction model
 */
export interface MT5TransactionFieldRefs {
  readonly id: Prisma.FieldRef<"MT5Transaction", 'String'>
  readonly type: Prisma.FieldRef<"MT5Transaction", 'String'>
  readonly amount: Prisma.FieldRef<"MT5Transaction", 'Float'>
  readonly status: Prisma.FieldRef<"MT5Transaction", 'String'>
  readonly paymentMethod: Prisma.FieldRef<"MT5Transaction", 'String'>
  readonly transactionId: Prisma.FieldRef<"MT5Transaction", 'String'>
  readonly comment: Prisma.FieldRef<"MT5Transaction", 'String'>
  readonly mt5AccountId: Prisma.FieldRef<"MT5Transaction", 'String'>
  readonly createdAt: Prisma.FieldRef<"MT5Transaction", 'DateTime'>
  readonly currency: Prisma.FieldRef<"MT5Transaction", 'String'>
  readonly depositId: Prisma.FieldRef<"MT5Transaction", 'String'>
  readonly withdrawalId: Prisma.FieldRef<"MT5Transaction", 'String'>
  readonly userId: Prisma.FieldRef<"MT5Transaction", 'String'>
  readonly processedBy: Prisma.FieldRef<"MT5Transaction", 'String'>
  readonly processedAt: Prisma.FieldRef<"MT5Transaction", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"MT5Transaction", 'DateTime'>
}
    

// Custom InputTypes
/**
 * MT5Transaction findUnique
 */
export type MT5TransactionFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Transaction
   */
  select?: Prisma.MT5TransactionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Transaction
   */
  omit?: Prisma.MT5TransactionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5TransactionInclude<ExtArgs> | null
  /**
   * Filter, which MT5Transaction to fetch.
   */
  where: Prisma.MT5TransactionWhereUniqueInput
}

/**
 * MT5Transaction findUniqueOrThrow
 */
export type MT5TransactionFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Transaction
   */
  select?: Prisma.MT5TransactionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Transaction
   */
  omit?: Prisma.MT5TransactionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5TransactionInclude<ExtArgs> | null
  /**
   * Filter, which MT5Transaction to fetch.
   */
  where: Prisma.MT5TransactionWhereUniqueInput
}

/**
 * MT5Transaction findFirst
 */
export type MT5TransactionFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Transaction
   */
  select?: Prisma.MT5TransactionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Transaction
   */
  omit?: Prisma.MT5TransactionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5TransactionInclude<ExtArgs> | null
  /**
   * Filter, which MT5Transaction to fetch.
   */
  where?: Prisma.MT5TransactionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MT5Transactions to fetch.
   */
  orderBy?: Prisma.MT5TransactionOrderByWithRelationInput | Prisma.MT5TransactionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for MT5Transactions.
   */
  cursor?: Prisma.MT5TransactionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MT5Transactions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MT5Transactions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of MT5Transactions.
   */
  distinct?: Prisma.MT5TransactionScalarFieldEnum | Prisma.MT5TransactionScalarFieldEnum[]
}

/**
 * MT5Transaction findFirstOrThrow
 */
export type MT5TransactionFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Transaction
   */
  select?: Prisma.MT5TransactionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Transaction
   */
  omit?: Prisma.MT5TransactionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5TransactionInclude<ExtArgs> | null
  /**
   * Filter, which MT5Transaction to fetch.
   */
  where?: Prisma.MT5TransactionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MT5Transactions to fetch.
   */
  orderBy?: Prisma.MT5TransactionOrderByWithRelationInput | Prisma.MT5TransactionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for MT5Transactions.
   */
  cursor?: Prisma.MT5TransactionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MT5Transactions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MT5Transactions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of MT5Transactions.
   */
  distinct?: Prisma.MT5TransactionScalarFieldEnum | Prisma.MT5TransactionScalarFieldEnum[]
}

/**
 * MT5Transaction findMany
 */
export type MT5TransactionFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Transaction
   */
  select?: Prisma.MT5TransactionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Transaction
   */
  omit?: Prisma.MT5TransactionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5TransactionInclude<ExtArgs> | null
  /**
   * Filter, which MT5Transactions to fetch.
   */
  where?: Prisma.MT5TransactionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MT5Transactions to fetch.
   */
  orderBy?: Prisma.MT5TransactionOrderByWithRelationInput | Prisma.MT5TransactionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing MT5Transactions.
   */
  cursor?: Prisma.MT5TransactionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MT5Transactions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MT5Transactions.
   */
  skip?: number
  distinct?: Prisma.MT5TransactionScalarFieldEnum | Prisma.MT5TransactionScalarFieldEnum[]
}

/**
 * MT5Transaction create
 */
export type MT5TransactionCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Transaction
   */
  select?: Prisma.MT5TransactionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Transaction
   */
  omit?: Prisma.MT5TransactionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5TransactionInclude<ExtArgs> | null
  /**
   * The data needed to create a MT5Transaction.
   */
  data: Prisma.XOR<Prisma.MT5TransactionCreateInput, Prisma.MT5TransactionUncheckedCreateInput>
}

/**
 * MT5Transaction createMany
 */
export type MT5TransactionCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many MT5Transactions.
   */
  data: Prisma.MT5TransactionCreateManyInput | Prisma.MT5TransactionCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * MT5Transaction createManyAndReturn
 */
export type MT5TransactionCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Transaction
   */
  select?: Prisma.MT5TransactionSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Transaction
   */
  omit?: Prisma.MT5TransactionOmit<ExtArgs> | null
  /**
   * The data used to create many MT5Transactions.
   */
  data: Prisma.MT5TransactionCreateManyInput | Prisma.MT5TransactionCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5TransactionIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * MT5Transaction update
 */
export type MT5TransactionUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Transaction
   */
  select?: Prisma.MT5TransactionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Transaction
   */
  omit?: Prisma.MT5TransactionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5TransactionInclude<ExtArgs> | null
  /**
   * The data needed to update a MT5Transaction.
   */
  data: Prisma.XOR<Prisma.MT5TransactionUpdateInput, Prisma.MT5TransactionUncheckedUpdateInput>
  /**
   * Choose, which MT5Transaction to update.
   */
  where: Prisma.MT5TransactionWhereUniqueInput
}

/**
 * MT5Transaction updateMany
 */
export type MT5TransactionUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update MT5Transactions.
   */
  data: Prisma.XOR<Prisma.MT5TransactionUpdateManyMutationInput, Prisma.MT5TransactionUncheckedUpdateManyInput>
  /**
   * Filter which MT5Transactions to update
   */
  where?: Prisma.MT5TransactionWhereInput
  /**
   * Limit how many MT5Transactions to update.
   */
  limit?: number
}

/**
 * MT5Transaction updateManyAndReturn
 */
export type MT5TransactionUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Transaction
   */
  select?: Prisma.MT5TransactionSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Transaction
   */
  omit?: Prisma.MT5TransactionOmit<ExtArgs> | null
  /**
   * The data used to update MT5Transactions.
   */
  data: Prisma.XOR<Prisma.MT5TransactionUpdateManyMutationInput, Prisma.MT5TransactionUncheckedUpdateManyInput>
  /**
   * Filter which MT5Transactions to update
   */
  where?: Prisma.MT5TransactionWhereInput
  /**
   * Limit how many MT5Transactions to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5TransactionIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * MT5Transaction upsert
 */
export type MT5TransactionUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Transaction
   */
  select?: Prisma.MT5TransactionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Transaction
   */
  omit?: Prisma.MT5TransactionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5TransactionInclude<ExtArgs> | null
  /**
   * The filter to search for the MT5Transaction to update in case it exists.
   */
  where: Prisma.MT5TransactionWhereUniqueInput
  /**
   * In case the MT5Transaction found by the `where` argument doesn't exist, create a new MT5Transaction with this data.
   */
  create: Prisma.XOR<Prisma.MT5TransactionCreateInput, Prisma.MT5TransactionUncheckedCreateInput>
  /**
   * In case the MT5Transaction was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.MT5TransactionUpdateInput, Prisma.MT5TransactionUncheckedUpdateInput>
}

/**
 * MT5Transaction delete
 */
export type MT5TransactionDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Transaction
   */
  select?: Prisma.MT5TransactionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Transaction
   */
  omit?: Prisma.MT5TransactionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5TransactionInclude<ExtArgs> | null
  /**
   * Filter which MT5Transaction to delete.
   */
  where: Prisma.MT5TransactionWhereUniqueInput
}

/**
 * MT5Transaction deleteMany
 */
export type MT5TransactionDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which MT5Transactions to delete
   */
  where?: Prisma.MT5TransactionWhereInput
  /**
   * Limit how many MT5Transactions to delete.
   */
  limit?: number
}

/**
 * MT5Transaction without action
 */
export type MT5TransactionDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MT5Transaction
   */
  select?: Prisma.MT5TransactionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MT5Transaction
   */
  omit?: Prisma.MT5TransactionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MT5TransactionInclude<ExtArgs> | null
}
