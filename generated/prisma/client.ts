
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 * If you're looking for something you can import in the client-side of your application, please refer to the `browser.ts` file instead.
 * 
 * ðŸŸ¢ You can import this file directly.
 */

import * as process from 'node:process'
import * as path from 'node:path'
import { fileURLToPath } from 'node:url'
globalThis['__dirname'] = path.dirname(fileURLToPath(import.meta.url))

import * as runtime from "@prisma/client/runtime/library"
import * as $Enums from "./enums.ts"
import * as $Class from "./internal/class.ts"
import * as Prisma from "./internal/prismaNamespace.ts"

export * as $Enums from './enums.ts'
export * from "./enums.ts"
/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Accounts
 * const accounts = await prisma.account.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname)
export type PrismaClient<LogOpts extends Prisma.LogLevel = never, OmitOpts extends Prisma.PrismaClientOptions["omit"] = Prisma.PrismaClientOptions["omit"], ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = $Class.PrismaClient<LogOpts, OmitOpts, ExtArgs>
export { Prisma }


// file annotations for bundling tools to include these files
path.join(__dirname, "libquery_engine-darwin-arm64.dylib.node")
path.join(process.cwd(), "generated/prisma/libquery_engine-darwin-arm64.dylib.node")

/**
 * Model Account
 * 
 */
export type Account = Prisma.AccountModel
/**
 * Model ActivityLog
 * 
 */
export type ActivityLog = Prisma.ActivityLogModel
/**
 * Model Deposit
 * 
 */
export type Deposit = Prisma.DepositModel
/**
 * Model KYC
 * 
 */
export type KYC = Prisma.KYCModel
/**
 * Model MT5Account
 * 
 */
export type MT5Account = Prisma.MT5AccountModel
/**
 * Model MT5Transaction
 * 
 */
export type MT5Transaction = Prisma.MT5TransactionModel
/**
 * Model PaymentMethod
 * 
 */
export type PaymentMethod = Prisma.PaymentMethodModel
/**
 * Model Role
 * 
 */
export type Role = Prisma.RoleModel
/**
 * Model SystemSetting
 * 
 */
export type SystemSetting = Prisma.SystemSettingModel
/**
 * Model Transaction
 * 
 */
export type Transaction = Prisma.TransactionModel
/**
 * Model User
 * 
 */
export type User = Prisma.UserModel
/**
 * Model UserRole
 * 
 */
export type UserRole = Prisma.UserRoleModel
/**
 * Model Withdrawal
 * 
 */
export type Withdrawal = Prisma.WithdrawalModel
/**
 * Model chat_conversations
 * 
 */
export type chat_conversations = Prisma.chat_conversationsModel
/**
 * Model chat_messages
 * 
 */
export type chat_messages = Prisma.chat_messagesModel
/**
 * Model chat_participants
 * 
 */
export type chat_participants = Prisma.chat_participantsModel
/**
 * Model group_commission_structures
 * 
 */
export type group_commission_structures = Prisma.group_commission_structuresModel
/**
 * Model ib_admin
 * 
 */
export type ib_admin = Prisma.ib_adminModel
/**
 * Model ib_requests
 * 
 */
export type ib_requests = Prisma.ib_requestsModel
/**
 * Model mt5_groups
 * 
 */
export type mt5_groups = Prisma.mt5_groupsModel
/**
 * Model symbols
 * 
 */
export type symbols = Prisma.symbolsModel
